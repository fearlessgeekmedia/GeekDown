{
  "version": 3,
  "sources": ["../../../../node_modules/@milkdown/plugin-block/src/__internal__/with-meta.ts", "../../../../node_modules/@milkdown/plugin-block/src/block-config.ts", "../../../../node_modules/@milkdown/plugin-block/src/__internal__/select-node-by-dom.ts", "../../../../node_modules/@milkdown/plugin-block/src/__internal__/serialize-for-clipboard.ts", "../../../../node_modules/@milkdown/plugin-block/src/block-service.ts", "../../../../node_modules/@milkdown/plugin-block/src/block-plugin.ts", "../../../../node_modules/@milkdown/plugin-block/src/block-provider.ts", "../../../../node_modules/@milkdown/plugin-block/src/index.ts", "../../../../node_modules/@milkdown/plugin-slash/src/slash-plugin.ts", "../../../../node_modules/@milkdown/plugin-slash/src/slash-provider.ts", "../../../../node_modules/@milkdown/crepe/src/feature/block-edit/menu/group-builder.ts", "../../../../node_modules/@milkdown/crepe/src/feature/block-edit/menu/utils.ts", "../../../../node_modules/@milkdown/crepe/src/feature/block-edit/menu/config.ts", "../../../../node_modules/@milkdown/crepe/src/feature/block-edit/menu/component.ts", "../../../../node_modules/@milkdown/crepe/src/feature/block-edit/menu/index.ts", "../../../../node_modules/@milkdown/crepe/src/feature/block-edit/handle/component.ts", "../../../../node_modules/@milkdown/crepe/src/feature/block-edit/handle/index.ts", "../../../../node_modules/@milkdown/crepe/src/feature/block-edit/index.ts"],
  "sourcesContent": ["import type { Meta, MilkdownPlugin } from '@milkdown/ctx'\n\nexport function withMeta<T extends MilkdownPlugin>(\n  plugin: T,\n  meta: Partial<Meta> & Pick<Meta, 'displayName'>\n): T {\n  Object.assign(plugin, {\n    meta: {\n      package: '@milkdown/plugin-block',\n      ...meta,\n    },\n  })\n\n  return plugin\n}\n", "import type { Node, ResolvedPos } from '@milkdown/prose/model'\nimport { $ctx } from '@milkdown/utils'\n\nimport { findParent } from '@milkdown/prose'\nimport { withMeta } from './__internal__/with-meta'\n\n/// @internal\nexport type FilterNodes = (pos: ResolvedPos, node: Node) => boolean\n\n/// @internal\nexport const defaultNodeFilter: FilterNodes = (pos) => {\n  const table = findParent((node) => node.type.name === 'table')(pos)\n  if (table) return false\n\n  return true\n}\n\n/// A slice contains the block config.\n/// Possible properties:\n/// - `filterNodes`: A function to filter nodes that can be dragged.\nexport const blockConfig = $ctx<{ filterNodes: FilterNodes }, 'blockConfig'>(\n  { filterNodes: defaultNodeFilter },\n  'blockConfig'\n)\n\nwithMeta(blockConfig, {\n  displayName: 'Ctx<blockConfig>',\n})\n", "import type { EditorView } from '@milkdown/prose/view'\n\nimport type { FilterNodes } from '../block-config'\nimport type { ActiveNode } from '../types'\n\nexport function selectRootNodeByDom(\n  view: EditorView,\n  coords: { x: number; y: number },\n  filterNodes: FilterNodes\n): ActiveNode | null {\n  const root = view.dom.parentElement\n  if (!root) return null\n\n  try {\n    const pos = view.posAtCoords({\n      left: coords.x,\n      top: coords.y,\n    })?.inside\n    if (pos == null || pos < 0) return null\n\n    let $pos = view.state.doc.resolve(pos)\n    let node = view.state.doc.nodeAt(pos)\n    let element = view.nodeDOM(pos) as HTMLElement | null\n\n    const filter = (needLookup: boolean) => {\n      const checkDepth = $pos.depth >= 1 && $pos.index($pos.depth) === 0\n      const shouldLookUp = needLookup || checkDepth\n\n      if (!shouldLookUp) return\n\n      const ancestorPos = $pos.before($pos.depth)\n      node = view.state.doc.nodeAt(ancestorPos)\n      element = view.nodeDOM(ancestorPos) as HTMLElement | null\n      $pos = view.state.doc.resolve(ancestorPos)\n\n      if (!filterNodes($pos, node!)) filter(true)\n    }\n\n    // If filterNodes returns false, we should look up the parent node.\n    const filterResult = filterNodes($pos, node!)\n    filter(!filterResult)\n\n    if (!element || !node) return null\n\n    return { node, $pos, el: element }\n  } catch {\n    return null\n  }\n}\n", "/**\n * Copy pasted from https://github.com/ProseMirror/prosemirror-view/blob/master/src/clipboard.ts\n */\n\nimport type { NodeType, Slice } from '@milkdown/prose/model'\nimport { DOMSerializer } from '@milkdown/prose/model'\nimport type { EditorView } from '@milkdown/prose/view'\n\nlet _detachedDoc: Document | null = null\nfunction detachedDoc() {\n  return (\n    _detachedDoc ||\n    (_detachedDoc = document.implementation.createHTMLDocument('title'))\n  )\n}\n\nconst wrapMap: { [node: string]: string[] } = {\n  thead: ['table'],\n  tbody: ['table'],\n  tfoot: ['table'],\n  caption: ['table'],\n  colgroup: ['table'],\n  col: ['table', 'colgroup'],\n  tr: ['table', 'tbody'],\n  td: ['table', 'tbody', 'tr'],\n  th: ['table', 'tbody', 'tr'],\n}\n\nexport function serializeForClipboard(view: EditorView, slice: Slice) {\n  const context = []\n  let { openStart, openEnd, content } = slice\n  while (\n    openStart > 1 &&\n    openEnd > 1 &&\n    content.childCount === 1 &&\n    content.firstChild!.childCount === 1\n  ) {\n    openStart -= 1\n    openEnd -= 1\n    const node = content.firstChild!\n    context.push(\n      node.type.name,\n      node.attrs !==\n        (node.type as NodeType & { defaultAttrs: unknown }).defaultAttrs\n        ? node.attrs\n        : null\n    )\n    content = node.content\n  }\n\n  const serializer =\n    view.someProp('clipboardSerializer') ||\n    DOMSerializer.fromSchema(view.state.schema)\n  const doc = detachedDoc()\n  const wrap = doc.createElement('div')\n  wrap.appendChild(serializer.serializeFragment(content, { document: doc }))\n\n  let firstChild = wrap.firstChild\n  let needsWrap\n  let wrappers = 0\n  while (\n    firstChild &&\n    firstChild.nodeType === 1 &&\n    (needsWrap = wrapMap[firstChild.nodeName.toLowerCase()])\n  ) {\n    for (let i = needsWrap.length - 1; i >= 0; i--) {\n      const wrapper = doc.createElement(needsWrap[i] as string)\n      while (wrap.firstChild) wrapper.appendChild(wrap.firstChild)\n      wrap.appendChild(wrapper)\n      wrappers++\n    }\n    firstChild = wrap.firstChild\n  }\n\n  if (firstChild && firstChild.nodeType === 1) {\n    ;(firstChild as HTMLElement).setAttribute(\n      'data-pm-slice',\n      `${openStart} ${openEnd}${wrappers ? ` -${wrappers}` : ''} ${JSON.stringify(context)}`\n    )\n  }\n\n  const text =\n    view.someProp('clipboardTextSerializer', (f) => f(slice, view)) ||\n    slice.content.textBetween(0, slice.content.size, '\\n\\n')\n\n  return { dom: wrap, text }\n}\n", "import type { Ctx } from '@milkdown/ctx'\nimport { editorViewCtx } from '@milkdown/core'\nimport { browser } from '@milkdown/prose'\nimport type { Selection } from '@milkdown/prose/state'\nimport { NodeSelection } from '@milkdown/prose/state'\nimport type { EditorView } from '@milkdown/prose/view'\nimport throttle from 'lodash.throttle'\n\nimport type { FilterNodes } from './block-config'\nimport { blockConfig } from './block-config'\nimport { selectRootNodeByDom } from './__internal__/select-node-by-dom'\nimport { serializeForClipboard } from './__internal__/serialize-for-clipboard'\nimport type { ActiveNode } from './types'\n\nconst brokenClipboardAPI =\n  (browser.ie && <number>browser.ie_version < 15) ||\n  (browser.ios && browser.webkit_version < 604)\n\nconst buffer = 20\n\n/// @internal\nexport type BlockServiceMessageType =\n  | {\n      type: 'hide'\n    }\n  | {\n      type: 'show'\n      active: ActiveNode\n    }\n\n/// @internal\nexport type BlockServiceMessage = (message: BlockServiceMessageType) => void\n\n/// @internal\n/// The block service, provide events and methods for block plugin.\n/// Generally you don't need to use this class directly.\nexport class BlockService {\n  /// @internal\n  #ctx?: Ctx\n\n  /// @internal\n  #createSelection: () => null | Selection = () => {\n    if (!this.#active) return null\n    const result = this.#active\n    const view = this.#view\n\n    if (view && NodeSelection.isSelectable(result.node)) {\n      const nodeSelection = NodeSelection.create(\n        view.state.doc,\n        result.$pos.pos\n      )\n      view.dispatch(view.state.tr.setSelection(nodeSelection))\n      view.focus()\n      this.#activeSelection = nodeSelection\n      return nodeSelection\n    }\n    return null\n  }\n\n  /// @internal\n  #activeSelection: null | Selection = null\n  /// @internal\n  #active: null | ActiveNode = null\n  /// @internal\n  #activeDOMRect: undefined | DOMRect = undefined\n\n  /// @internal\n  #dragging = false\n\n  /// @internal\n  get #filterNodes(): FilterNodes | undefined {\n    return this.#ctx?.get(blockConfig.key).filterNodes\n  }\n\n  /// @internal\n  get #view() {\n    return this.#ctx?.get(editorViewCtx)\n  }\n\n  /// @internal\n  #notify?: BlockServiceMessage\n\n  /// @internal\n  #hide = () => {\n    this.#notify?.({ type: 'hide' })\n    this.#active = null\n  }\n\n  /// @internal\n  #show = (active: ActiveNode) => {\n    this.#active = active\n    this.#notify?.({ type: 'show', active })\n  }\n\n  /// Bind editor context and notify function to the service.\n  bind = (ctx: Ctx, notify: BlockServiceMessage) => {\n    this.#ctx = ctx\n    this.#notify = notify\n  }\n\n  /// Add mouse event to the dom.\n  addEvent = (dom: HTMLElement) => {\n    dom.addEventListener('mousedown', this.#handleMouseDown)\n    dom.addEventListener('mouseup', this.#handleMouseUp)\n    dom.addEventListener('dragstart', this.#handleDragStart)\n  }\n\n  /// Remove mouse event to the dom.\n  removeEvent = (dom: HTMLElement) => {\n    dom.removeEventListener('mousedown', this.#handleMouseDown)\n    dom.removeEventListener('mouseup', this.#handleMouseUp)\n    dom.removeEventListener('dragstart', this.#handleDragStart)\n  }\n\n  /// Unbind the notify function.\n  unBind = () => {\n    this.#notify = undefined\n  }\n\n  /// @internal\n  #handleMouseDown = () => {\n    this.#activeDOMRect = this.#active?.el.getBoundingClientRect()\n    this.#createSelection()\n  }\n\n  /// @internal\n  #handleMouseUp = () => {\n    if (!this.#dragging) {\n      requestAnimationFrame(() => {\n        if (!this.#activeDOMRect) return\n        this.#view?.focus()\n      })\n\n      return\n    }\n    this.#dragging = false\n    this.#activeSelection = null\n  }\n\n  /// @internal\n  #handleDragStart = (event: DragEvent) => {\n    this.#dragging = true\n\n    const view = this.#view\n    if (!view) return\n    view.dom.dataset.dragging = 'true'\n\n    const selection = this.#activeSelection\n    if (event.dataTransfer && selection) {\n      const slice = selection.content()\n      event.dataTransfer.effectAllowed = 'copyMove'\n      const { dom, text } = serializeForClipboard(view, slice)\n      event.dataTransfer.clearData()\n      event.dataTransfer.setData(\n        brokenClipboardAPI ? 'Text' : 'text/html',\n        dom.innerHTML\n      )\n      if (!brokenClipboardAPI) event.dataTransfer.setData('text/plain', text)\n      const activeEl = this.#active?.el\n      if (activeEl) event.dataTransfer.setDragImage(activeEl, 0, 0)\n\n      view.dragging = {\n        slice,\n        move: true,\n      }\n    }\n  }\n\n  /// @internal\n  keydownCallback = (view: EditorView) => {\n    this.#hide()\n\n    this.#dragging = false\n    view.dom.dataset.dragging = 'false'\n    return false\n  }\n\n  /// @internal\n  #mousemoveCallback = throttle((view: EditorView, event: MouseEvent) => {\n    if (!view.editable) return\n\n    const rect = view.dom.getBoundingClientRect()\n    const x = rect.left + rect.width / 2\n    const dom = view.root.elementFromPoint(x, event.clientY)\n    if (!(dom instanceof Element)) {\n      this.#hide()\n      return\n    }\n\n    const filterNodes = this.#filterNodes\n    if (!filterNodes) return\n\n    const result = selectRootNodeByDom(\n      view,\n      { x, y: event.clientY },\n      filterNodes\n    )\n\n    if (!result) {\n      this.#hide()\n      return\n    }\n    this.#show(result)\n  }, 200)\n\n  /// @internal\n  mousemoveCallback = (view: EditorView, event: MouseEvent) => {\n    if (view.composing || !view.editable) return false\n\n    this.#mousemoveCallback(view, event)\n\n    return false\n  }\n\n  /// @internal\n  dragoverCallback = (view: EditorView, event: DragEvent) => {\n    if (this.#dragging) {\n      const root = this.#view?.dom.parentElement\n      if (!root) return false\n\n      const hasHorizontalScrollbar = root.scrollHeight > root.clientHeight\n\n      const rootRect = root.getBoundingClientRect()\n      if (hasHorizontalScrollbar) {\n        if (root.scrollTop > 0 && Math.abs(event.y - rootRect.y) < buffer) {\n          const top = root.scrollTop > 10 ? root.scrollTop - 10 : 0\n          root.scrollTop = top\n          return false\n        }\n        const totalHeight = Math.round(view.dom.getBoundingClientRect().height)\n        const scrollBottom = Math.round(root.scrollTop + rootRect.height)\n        if (\n          scrollBottom < totalHeight &&\n          Math.abs(event.y - (rootRect.height + rootRect.y)) < buffer\n        ) {\n          const top = root.scrollTop + 10\n          root.scrollTop = top\n          return false\n        }\n      }\n    }\n    return false\n  }\n\n  /// @internal\n  dragenterCallback = (view: EditorView) => {\n    if (!view.dragging) return\n\n    this.#dragging = true\n    view.dom.dataset.dragging = 'true'\n  }\n\n  /// @internal\n  dragleaveCallback = (view: EditorView, event: DragEvent) => {\n    const x = event.clientX\n    const y = event.clientY\n    // if cursor out of the editor\n    if (x < 0 || y < 0 || x > window.innerWidth || y > window.innerHeight) {\n      this.#active = null\n      this.#dragEnd(view)\n    }\n  }\n\n  /// @internal\n  dropCallback = (view: EditorView) => {\n    this.#dragEnd(view)\n\n    return false\n  }\n\n  /// @internal\n  dragendCallback = (view: EditorView) => {\n    this.#dragEnd(view)\n  }\n\n  /// @internal\n  #dragEnd = (view: EditorView) => {\n    this.#dragging = false\n    view.dom.dataset.dragging = 'false'\n  }\n}\n", "import type { PluginSpec } from '@milkdown/prose/state'\nimport { Plugin, PluginKey } from '@milkdown/prose/state'\nimport { $ctx, $prose } from '@milkdown/utils'\n\nimport { BlockService } from './block-service'\nimport { withMeta } from './__internal__/with-meta'\n\n/// @internal\nexport const blockService = $ctx(() => new BlockService(), 'blockService')\n\n/// @internal\nexport const blockServiceInstance = $ctx(\n  {} as BlockService,\n  'blockServiceInstance'\n)\n\nwithMeta(blockService, {\n  displayName: 'Ctx<blockService>',\n})\n\nwithMeta(blockServiceInstance, {\n  displayName: 'Ctx<blockServiceInstance>',\n})\n\n/// A slice contains a factory that will return a plugin spec.\n/// Users can use this slice to customize the plugin.\nexport const blockSpec = $ctx<PluginSpec<any>, 'blockSpec'>({}, 'blockSpec')\n\nwithMeta(blockSpec, {\n  displayName: 'Ctx<blockSpec>',\n})\n\n/// The block prosemirror plugin.\nexport const blockPlugin = $prose((ctx) => {\n  const milkdownPluginBlockKey = new PluginKey('MILKDOWN_BLOCK')\n  const getService = ctx.get(blockService.key)\n  const service = getService()\n  ctx.set(blockServiceInstance.key, service)\n  const spec = ctx.get(blockSpec.key)\n\n  return new Plugin({\n    key: milkdownPluginBlockKey,\n    ...spec,\n    props: {\n      ...spec.props,\n      handleDOMEvents: {\n        drop: (view) => {\n          return service.dropCallback(view)\n        },\n        pointermove: (view, event) => {\n          return service.mousemoveCallback(view, event)\n        },\n        keydown: (view) => {\n          return service.keydownCallback(view)\n        },\n        dragover: (view, event) => {\n          return service.dragoverCallback(view, event)\n        },\n        dragleave: (view, event) => {\n          return service.dragleaveCallback(view, event)\n        },\n        dragenter: (view) => {\n          return service.dragenterCallback(view)\n        },\n        dragend: (view) => {\n          return service.dragendCallback(view)\n        },\n      },\n    },\n  })\n})\n\nwithMeta(blockPlugin, {\n  displayName: 'Prose<block>',\n})\n", "import type { Ctx } from '@milkdown/ctx'\nimport type { EditorState } from '@milkdown/prose/state'\nimport type { EditorView } from '@milkdown/prose/view'\n\nimport type {\n  ComputePositionConfig,\n  Middleware,\n  Placement,\n  VirtualElement,\n} from '@floating-ui/dom'\nimport { computePosition, flip, offset } from '@floating-ui/dom'\n\nimport { editorViewCtx } from '@milkdown/core'\nimport type { BlockService } from './block-service'\nimport { blockServiceInstance } from './block-plugin'\nimport type { ActiveNode } from './types'\n\n/// The context of the block provider.\nexport interface DeriveContext {\n  ctx: Ctx\n  active: ActiveNode\n  editorDom: HTMLElement\n  blockDom: HTMLElement\n}\n\n/// Options for creating block provider.\nexport interface BlockProviderOptions {\n  /// The context of the editor.\n  ctx: Ctx\n  /// The content of the block.\n  content: HTMLElement\n  /// The function to determine whether the tooltip should be shown.\n  shouldShow?: (view: EditorView, prevState?: EditorState) => boolean\n  /// The offset to get the block. Default is 0.\n  getOffset?: (deriveContext: DeriveContext) =>\n    | number\n    | {\n        mainAxis?: number\n        crossAxis?: number\n        alignmentAxis?: number | null\n      }\n  /// The function to get the position of the block. Default is the position of the active node.\n  getPosition?: (deriveContext: DeriveContext) => Omit<DOMRect, 'toJSON'>\n  /// The function to get the placement of the block. Default is 'left'.\n  getPlacement?: (deriveContext: DeriveContext) => Placement\n  /// Other middlewares for floating ui. This will be added after the internal middlewares.\n  middleware?: Middleware[]\n  /// Options for floating ui. If you pass `middleware` or `placement`, it will override the internal settings.\n  floatingUIOptions?: Partial<ComputePositionConfig>\n  /// The root element that the block will be appended to.\n  root?: HTMLElement\n}\n\n/// A provider for creating block.\nexport class BlockProvider {\n  /// @internal\n  readonly #element: HTMLElement\n\n  /// @internal\n  readonly #ctx: Ctx\n\n  /// @internal\n  #service?: BlockService\n\n  /// @internal\n  #activeNode: ActiveNode | null = null\n\n  /// @internal\n  readonly #root?: HTMLElement\n\n  /// @internal\n  #initialized = false\n\n  /// @internal\n  readonly #middleware: Middleware[]\n\n  /// @internal\n  readonly #floatingUIOptions: Partial<ComputePositionConfig>\n\n  /// @internal\n  readonly #getOffset?: (deriveContext: DeriveContext) =>\n    | number\n    | {\n        mainAxis?: number\n        crossAxis?: number\n        alignmentAxis?: number | null\n      }\n\n  /// @internal\n  readonly #getPosition?: (\n    deriveContext: DeriveContext\n  ) => Omit<DOMRect, 'toJSON'>\n\n  /// @internal\n  readonly #getPlacement?: (deriveContext: DeriveContext) => Placement\n\n  /// The context of current active node.\n  get active() {\n    return this.#activeNode\n  }\n\n  constructor(options: BlockProviderOptions) {\n    this.#ctx = options.ctx\n    this.#element = options.content\n    this.#getOffset = options.getOffset\n    this.#getPosition = options.getPosition\n    this.#getPlacement = options.getPlacement\n    this.#middleware = options.middleware ?? []\n    this.#floatingUIOptions = options.floatingUIOptions ?? {}\n    this.#root = options.root\n    this.hide()\n  }\n\n  /// @internal\n  #init() {\n    const view = this.#ctx.get(editorViewCtx)\n    const root = this.#root ?? view.dom.parentElement ?? document.body\n    root.appendChild(this.#element)\n\n    const service = this.#ctx.get(blockServiceInstance.key)\n    service.bind(this.#ctx, (message) => {\n      if (message.type === 'hide') {\n        this.hide()\n        this.#activeNode = null\n      } else if (message.type === 'show') {\n        this.show(message.active)\n        this.#activeNode = message.active\n      }\n    })\n\n    this.#service = service\n    this.#service.addEvent(this.#element)\n    this.#element.draggable = true\n  }\n\n  /// Update provider state by editor view.\n  update = (): void => {\n    requestAnimationFrame(() => {\n      if (!this.#initialized) {\n        try {\n          this.#init()\n          this.#initialized = true\n        } catch {\n          // ignore\n        }\n      }\n    })\n  }\n\n  /// Destroy the block.\n  destroy = () => {\n    this.#service?.unBind()\n    this.#service?.removeEvent(this.#element)\n    this.#element.remove()\n  }\n\n  /// Show the block.\n  show = (active: ActiveNode) => {\n    const dom = active.el\n    const editorDom = this.#ctx.get(editorViewCtx).dom\n    const deriveContext: DeriveContext = {\n      ctx: this.#ctx,\n      active,\n      editorDom,\n      blockDom: this.#element,\n    }\n    const virtualEl: VirtualElement = {\n      contextElement: dom,\n      getBoundingClientRect: () => {\n        if (this.#getPosition) return this.#getPosition(deriveContext)\n\n        return dom.getBoundingClientRect()\n      },\n    }\n    const middleware = [flip()]\n    if (this.#getOffset) {\n      const offsetOption = this.#getOffset(deriveContext)\n      const offsetExt = offset(offsetOption)\n      middleware.push(offsetExt)\n    }\n\n    computePosition(virtualEl, this.#element, {\n      placement: this.#getPlacement\n        ? this.#getPlacement(deriveContext)\n        : 'left',\n      middleware: [...middleware, ...this.#middleware],\n      ...this.#floatingUIOptions,\n    }).then(({ x, y }) => {\n      Object.assign(this.#element.style, {\n        left: `${x}px`,\n        top: `${y}px`,\n      })\n      this.#element.dataset.show = 'true'\n    })\n  }\n\n  /// Hide the block.\n  hide = () => {\n    this.#element.dataset.show = 'false'\n  }\n}\n", "import type { SliceType } from '@milkdown/ctx'\nimport type { PluginSpec } from '@milkdown/prose/state'\nimport type { $Ctx, $Prose } from '@milkdown/utils'\nimport type { FilterNodes } from './block-config'\nimport { blockConfig } from './block-config'\nimport {\n  blockPlugin,\n  blockService,\n  blockServiceInstance,\n  blockSpec,\n} from './block-plugin'\nimport type { BlockService } from './block-service'\n\nexport * from './block-plugin'\nexport * from './block-provider'\nexport * from './block-service'\nexport * from './block-config'\nexport * from './types'\n\n/// @internal\nexport type BlockPlugin = [\n  $Ctx<PluginSpec<any>, 'blockSpec'>,\n  $Ctx<{ filterNodes: FilterNodes }, 'blockConfig'>,\n  $Ctx<() => BlockService, 'blockService'>,\n  $Ctx<BlockService, 'blockServiceInstance'>,\n  $Prose,\n] & {\n  key: SliceType<PluginSpec<any>, 'blockSpec'>\n  pluginKey: $Prose['key']\n}\n\n/// All plugins exported by this package.\nexport const block = [\n  blockSpec,\n  blockConfig,\n  blockService,\n  blockServiceInstance,\n  blockPlugin,\n] as BlockPlugin\nblock.key = blockSpec.key\nblock.pluginKey = blockPlugin.key\n", "import type { SliceType } from '@milkdown/ctx'\nimport type { PluginSpec } from '@milkdown/prose/state'\nimport { Plugin, PluginKey } from '@milkdown/prose/state'\nimport type { $Ctx, $Prose } from '@milkdown/utils'\nimport { $ctx, $prose } from '@milkdown/utils'\n\n/// @internal\nexport type SlashPluginSpecId<Id extends string> = `${Id}_SLASH_SPEC`\n\n/// @internal\nexport type SlashPlugin<Id extends string, State = any> = [\n  $Ctx<PluginSpec<State>, SlashPluginSpecId<Id>>,\n  $Prose,\n] & {\n  key: SliceType<PluginSpec<State>, SlashPluginSpecId<Id>>\n  pluginKey: $Prose['key']\n}\n\n/// Create a slash plugin with a unique id.\nexport function slashFactory<Id extends string, State = any>(id: Id) {\n  const slashSpec = $ctx<PluginSpec<State>, SlashPluginSpecId<Id>>(\n    {},\n    `${id}_SLASH_SPEC`\n  )\n  const slashPlugin = $prose((ctx) => {\n    const spec = ctx.get(slashSpec.key)\n    return new Plugin({\n      key: new PluginKey(`${id}_SLASH`),\n      ...spec,\n    })\n  })\n  const result = [slashSpec, slashPlugin] as SlashPlugin<Id>\n  result.key = slashSpec.key\n  result.pluginKey = slashPlugin.key\n  slashSpec.meta = {\n    package: '@milkdown/plugin-slash',\n    displayName: `Ctx<slashSpec>|${id}`,\n  }\n  slashPlugin.meta = {\n    package: '@milkdown/plugin-slash',\n    displayName: `Prose<slash>|${id}`,\n  }\n\n  return result\n}\n", "import { findParentNode, posToDOMRect } from '@milkdown/prose'\nimport type { EditorState } from '@milkdown/prose/state'\nimport type { Node } from '@milkdown/prose/model'\nimport { TextSelection } from '@milkdown/prose/state'\nimport type { EditorView } from '@milkdown/prose/view'\nimport debounce from 'lodash.debounce'\nimport type {\n  ComputePositionConfig,\n  Middleware,\n  VirtualElement,\n} from '@floating-ui/dom'\nimport { computePosition, flip, offset } from '@floating-ui/dom'\n\n/// Options for slash provider.\nexport interface SlashProviderOptions {\n  /// The slash content.\n  content: HTMLElement\n  /// The debounce time for updating slash, 200ms by default.\n  debounce?: number\n  /// The function to determine whether the tooltip should be shown.\n  shouldShow?: (view: EditorView, prevState?: EditorState) => boolean\n  /// The key trigger for shouldShow, '/' by default.\n  trigger?: string | string[]\n  /// The offset to get the block. Default is 0.\n  offset?:\n    | number\n    | {\n        mainAxis?: number\n        crossAxis?: number\n        alignmentAxis?: number | null\n      }\n  /// Other middlewares for floating ui. This will be added after the internal middlewares.\n  middleware?: Middleware[]\n  /// Options for floating ui. If you pass `middleware` or `placement`, it will override the internal settings.\n  floatingUIOptions?: Partial<ComputePositionConfig>\n  /// The root element that the slash will be appended to.\n  root?: HTMLElement\n}\n\n/// A provider for creating slash.\nexport class SlashProvider {\n  /// The root element of the slash.\n  element: HTMLElement\n\n  /// @internal\n  #initialized = false\n\n  /// @internal\n  readonly #middleware: Middleware[]\n\n  /// @internal\n  readonly #floatingUIOptions: Partial<ComputePositionConfig>\n\n  /// @internal\n  readonly #root?: HTMLElement\n\n  /// @internal\n  readonly #debounce: number\n\n  /// @internal\n  readonly #trigger: string | string[]\n\n  /// @internal\n  readonly #shouldShow: (view: EditorView, prevState?: EditorState) => boolean\n\n  /// The offset to get the block. Default is 0.\n  readonly #offset?:\n    | number\n    | {\n        mainAxis?: number\n        crossAxis?: number\n        alignmentAxis?: number | null\n      }\n\n  /// On show callback.\n  onShow = () => {}\n\n  /// On hide callback.\n  onHide = () => {}\n\n  constructor(options: SlashProviderOptions) {\n    this.element = options.content\n    this.#debounce = options.debounce ?? 200\n    this.#shouldShow = options.shouldShow ?? this.#_shouldShow\n    this.#trigger = options.trigger ?? '/'\n    this.#offset = options.offset\n    this.#middleware = options.middleware ?? []\n    this.#floatingUIOptions = options.floatingUIOptions ?? {}\n    this.#root = options.root\n  }\n\n  /// @internal\n  #onUpdate = (view: EditorView, prevState?: EditorState): void => {\n    const { state, composing } = view\n    const { selection, doc } = state\n    const { ranges } = selection\n    const from = Math.min(...ranges.map((range) => range.$from.pos))\n    const to = Math.max(...ranges.map((range) => range.$to.pos))\n    const isSame =\n      prevState && prevState.doc.eq(doc) && prevState.selection.eq(selection)\n\n    if (!this.#initialized) {\n      const root = this.#root ?? view.dom.parentElement ?? document.body\n      root.appendChild(this.element)\n      this.#initialized = true\n    }\n\n    if (composing || isSame) return\n\n    if (!this.#shouldShow(view, prevState)) {\n      this.hide()\n      return\n    }\n\n    const virtualEl: VirtualElement = {\n      getBoundingClientRect: () => posToDOMRect(view, from, to),\n    }\n    computePosition(virtualEl, this.element, {\n      placement: 'bottom-start',\n      middleware: [flip(), offset(this.#offset), ...this.#middleware],\n      ...this.#floatingUIOptions,\n    }).then(({ x, y }) => {\n      Object.assign(this.element.style, {\n        left: `${x}px`,\n        top: `${y}px`,\n      })\n    })\n\n    this.show()\n  }\n\n  /// @internal\n  #_shouldShow(view: EditorView): boolean {\n    const currentTextBlockContent = this.getContent(view)\n\n    if (!currentTextBlockContent) return false\n\n    const target = currentTextBlockContent.at(-1)\n\n    if (!target) return false\n\n    return Array.isArray(this.#trigger)\n      ? this.#trigger.includes(target)\n      : this.#trigger === target\n  }\n\n  /// Update provider state by editor view.\n  update = (view: EditorView, prevState?: EditorState): void => {\n    const updater = debounce(this.#onUpdate, this.#debounce)\n\n    updater(view, prevState)\n  }\n\n  /// Get the content of the current text block.\n  /// Pass the `matchNode` function to determine whether the current node should be matched, by default, it will match the paragraph node.\n  getContent = (\n    view: EditorView,\n    matchNode: (node: Node) => boolean = (node) =>\n      node.type.name === 'paragraph'\n  ): string | undefined => {\n    const { selection } = view.state\n    const { empty, $from } = selection\n    const isTextBlock = view.state.selection instanceof TextSelection\n\n    const isSlashChildren = this.element.contains(document.activeElement)\n\n    const notHasFocus = !view.hasFocus() && !isSlashChildren\n\n    const isReadonly = !view.editable\n\n    const paragraph = findParentNode(matchNode)(view.state.selection)\n\n    const isNotInParagraph = !paragraph\n\n    if (notHasFocus || isReadonly || !empty || !isTextBlock || isNotInParagraph)\n      return\n\n    return $from.parent.textBetween(\n      Math.max(0, $from.parentOffset - 500),\n      $from.parentOffset,\n      undefined,\n      '\\uFFFC'\n    )\n  }\n\n  /// Destroy the slash.\n  destroy = () => {}\n\n  /// Show the slash.\n  show = () => {\n    this.element.dataset.show = 'true'\n    this.onShow()\n  }\n\n  /// Hide the slash.\n  hide = () => {\n    this.element.dataset.show = 'false'\n    this.onHide()\n  }\n}\n", "import type { MenuItem, MenuItemGroup } from './utils'\n\nexport class GroupBuilder {\n  #groups: MenuItemGroup<false>[] = []\n\n  clear = () => {\n    this.#groups = []\n    return this\n  }\n\n  #getGroupInstance = (group: MenuItemGroup<false>) => {\n    const groupInstance = {\n      group,\n      addItem: (key: string, item: Omit<MenuItem, 'key' | 'index'>) => {\n        const data = { key, ...item }\n        group.items.push(data)\n        return groupInstance\n      },\n      clear: () => {\n        group.items = []\n        return groupInstance\n      },\n    }\n    return groupInstance\n  }\n\n  addGroup = (key: string, label: string) => {\n    const items: Omit<MenuItem, 'index'>[] = []\n    const group: MenuItemGroup<false> = {\n      key,\n      label,\n      items,\n    }\n    this.#groups.push(group)\n\n    return this.#getGroupInstance(group)\n  }\n\n  getGroup = (key: string) => {\n    const group = this.#groups.find((group) => group.key === key)\n    if (!group) throw new Error(`Group with key ${key} not found`)\n\n    return this.#getGroupInstance(group)\n  }\n\n  build = () => {\n    return this.#groups\n  }\n}\n", "import type { html } from 'atomico'\nimport type { Ctx } from '@milkdown/kit/ctx'\nimport type { Command, Transaction } from '@milkdown/kit/prose/state'\nimport type { Attrs, NodeType } from '@milkdown/kit/prose/model'\nimport { findWrapping } from '@milkdown/kit/prose/transform'\n\nexport interface MenuItem {\n  index: number\n  key: string\n  label: string\n  icon: ReturnType<typeof html>\n  onRun: (ctx: Ctx) => void\n}\n\ntype WithRange<T, HasIndex extends true | false = true> = HasIndex extends true\n  ? T & { range: [start: number, end: number] }\n  : T\n\nexport type MenuItemGroup<HasIndex extends true | false = true> = WithRange<\n  {\n    key: string\n    label: string\n    items: HasIndex extends true ? MenuItem[] : Omit<MenuItem, 'index'>[]\n  },\n  HasIndex\n>\n\nexport function clearRange(tr: Transaction) {\n  const { $from, $to } = tr.selection\n  const { pos: from } = $from\n  const { pos: to } = $to\n  tr = tr.deleteRange(from - $from.node().content.size, to)\n  return tr\n}\n\nexport function setBlockType(\n  tr: Transaction,\n  nodeType: NodeType,\n  attrs: Attrs | null = null\n) {\n  const { from, to } = tr.selection\n  return tr.setBlockType(from, to, nodeType, attrs)\n}\n\nexport function wrapInBlockType(\n  tr: Transaction,\n  nodeType: NodeType,\n  attrs: Attrs | null = null\n) {\n  const { $from, $to } = tr.selection\n\n  const range = $from.blockRange($to)\n  const wrapping = range && findWrapping(range, nodeType, attrs)\n  if (!wrapping) return null\n\n  return tr.wrap(range, wrapping)\n}\n\nexport function addBlockType(\n  tr: Transaction,\n  nodeType: NodeType,\n  attrs: Attrs | null = null\n) {\n  const node = nodeType.createAndFill(attrs)\n  if (!node) return null\n\n  return tr.replaceSelectionWith(node)\n}\n\nexport function clearContentAndSetBlockType(\n  nodeType: NodeType,\n  attrs: Attrs | null = null\n): Command {\n  return (state, dispatch) => {\n    if (dispatch) {\n      const tr = setBlockType(clearRange(state.tr), nodeType, attrs)\n      dispatch(tr.scrollIntoView())\n    }\n    return true\n  }\n}\n\nexport function clearContentAndWrapInBlockType(\n  nodeType: NodeType,\n  attrs: Attrs | null = null\n): Command {\n  return (state, dispatch) => {\n    const tr = wrapInBlockType(clearRange(state.tr), nodeType, attrs)\n    if (!tr) return false\n\n    if (dispatch) dispatch(tr.scrollIntoView())\n\n    return true\n  }\n}\n\nexport function clearContentAndAddBlockType(\n  nodeType: NodeType,\n  attrs: Attrs | null = null\n): Command {\n  return (state, dispatch) => {\n    const tr = addBlockType(clearRange(state.tr), nodeType, attrs)\n    if (!tr) return false\n\n    if (dispatch) dispatch(tr.scrollIntoView())\n\n    return true\n  }\n}\n", "import { imageBlockSchema } from '@milkdown/kit/component/image-block'\nimport { editorViewCtx } from '@milkdown/kit/core'\nimport type { Ctx } from '@milkdown/kit/ctx'\nimport {\n  blockquoteSchema,\n  bulletListSchema,\n  codeBlockSchema,\n  headingSchema,\n  hrSchema,\n  listItemSchema,\n  orderedListSchema,\n  paragraphSchema,\n} from '@milkdown/kit/preset/commonmark'\nimport { createTable } from '@milkdown/kit/preset/gfm'\nimport { TextSelection } from '@milkdown/kit/prose/state'\nimport { CrepeFeature } from '../../..'\nimport { FeaturesCtx } from '../../../core/slice'\nimport {\n  bulletListIcon,\n  codeIcon,\n  dividerIcon,\n  functionsIcon,\n  h1Icon,\n  h2Icon,\n  h3Icon,\n  h4Icon,\n  h5Icon,\n  h6Icon,\n  imageIcon,\n  orderedListIcon,\n  quoteIcon,\n  tableIcon,\n  textIcon,\n  todoListIcon,\n} from '../../../icons'\nimport type { BlockEditFeatureConfig } from '../index'\nimport { GroupBuilder } from './group-builder'\nimport type { MenuItemGroup } from './utils'\nimport {\n  clearContentAndAddBlockType,\n  clearContentAndSetBlockType,\n  clearContentAndWrapInBlockType,\n  clearRange,\n} from './utils'\n\nexport function getGroups(\n  filter?: string,\n  config?: BlockEditFeatureConfig,\n  ctx?: Ctx\n) {\n  const flags = ctx?.get(FeaturesCtx)\n  const isLatexEnabled = flags?.includes(CrepeFeature.Latex)\n  const isImageBlockEnabled = flags?.includes(CrepeFeature.ImageBlock)\n  const isTableEnabled = flags?.includes(CrepeFeature.Table)\n\n  const groupBuilder = new GroupBuilder()\n  groupBuilder\n    .addGroup('text', config?.slashMenuTextGroupLabel ?? 'Text')\n    .addItem('text', {\n      label: config?.slashMenuTextGroupLabel ?? 'Text',\n      icon: config?.slashMenuTextIcon?.() ?? textIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(paragraphSchema.type(ctx))\n        command(state, dispatch)\n      },\n    })\n    .addItem('h1', {\n      label: config?.slashMenuH1Label ?? 'Heading 1',\n      icon: config?.slashMenuH1Icon?.() ?? h1Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), {\n          level: 1,\n        })\n        command(state, dispatch)\n      },\n    })\n    .addItem('h2', {\n      label: config?.slashMenuH2Label ?? 'Heading 2',\n      icon: config?.slashMenuH2Icon?.() ?? h2Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), {\n          level: 2,\n        })\n        command(state, dispatch)\n      },\n    })\n    .addItem('h3', {\n      label: config?.slashMenuH3Label ?? 'Heading 3',\n      icon: config?.slashMenuH3Icon?.() ?? h3Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), {\n          level: 3,\n        })\n        command(state, dispatch)\n      },\n    })\n    .addItem('h4', {\n      label: config?.slashMenuH4Label ?? 'Heading 4',\n      icon: config?.slashMenuH4Icon?.() ?? h4Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), {\n          level: 4,\n        })\n        command(state, dispatch)\n      },\n    })\n    .addItem('h5', {\n      label: config?.slashMenuH5Label ?? 'Heading 5',\n      icon: config?.slashMenuH5Icon?.() ?? h5Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), {\n          level: 5,\n        })\n        command(state, dispatch)\n      },\n    })\n    .addItem('h6', {\n      label: config?.slashMenuH6Label ?? 'Heading 6',\n      icon: config?.slashMenuH6Icon?.() ?? h6Icon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndSetBlockType(headingSchema.type(ctx), {\n          level: 6,\n        })\n        command(state, dispatch)\n      },\n    })\n    .addItem('quote', {\n      label: config?.slashMenuQuoteLabel ?? 'Quote',\n      icon: config?.slashMenuQuoteIcon?.() ?? quoteIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndWrapInBlockType(\n          blockquoteSchema.type(ctx)\n        )\n        command(state, dispatch)\n      },\n    })\n    .addItem('divider', {\n      label: config?.slashMenuDividerLabel ?? 'Divider',\n      icon: config?.slashMenuDividerIcon?.() ?? dividerIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndAddBlockType(hrSchema.type(ctx))\n        command(state, dispatch)\n      },\n    })\n\n  groupBuilder\n    .addGroup('list', config?.slashMenuListGroupLabel ?? 'List')\n    .addItem('bullet-list', {\n      label: config?.slashMenuBulletListLabel ?? 'Bullet List',\n      icon: config?.slashMenuBulletListIcon?.() ?? bulletListIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndWrapInBlockType(\n          bulletListSchema.type(ctx)\n        )\n        command(state, dispatch)\n      },\n    })\n    .addItem('ordered-list', {\n      label: config?.slashMenuOrderedListLabel ?? 'Ordered List',\n      icon: config?.slashMenuOrderedListIcon?.() ?? orderedListIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndWrapInBlockType(\n          orderedListSchema.type(ctx)\n        )\n        command(state, dispatch)\n      },\n    })\n    .addItem('todo-list', {\n      label: config?.slashMenuTaskListLabel ?? 'Todo List',\n      icon: config?.slashMenuTaskListIcon?.() ?? todoListIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndWrapInBlockType(\n          listItemSchema.type(ctx),\n          { checked: false }\n        )\n        command(state, dispatch)\n      },\n    })\n\n  const advancedGroup = groupBuilder.addGroup(\n    'advanced',\n    config?.slashMenuAdvancedGroupLabel ?? 'Advanced'\n  )\n\n  if (isImageBlockEnabled) {\n    advancedGroup.addItem('image', {\n      label: config?.slashMenuImageLabel ?? 'Image',\n      icon: config?.slashMenuImageIcon?.() ?? imageIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndAddBlockType(imageBlockSchema.type(ctx))\n        command(state, dispatch)\n      },\n    })\n  }\n\n  advancedGroup.addItem('code', {\n    label: config?.slashMenuCodeBlockLabel ?? 'Code',\n    icon: config?.slashMenuCodeBlockIcon?.() ?? codeIcon,\n    onRun: (ctx) => {\n      const view = ctx.get(editorViewCtx)\n      const { dispatch, state } = view\n\n      const command = clearContentAndAddBlockType(codeBlockSchema.type(ctx))\n      command(state, dispatch)\n    },\n  })\n\n  if (isTableEnabled) {\n    advancedGroup.addItem('table', {\n      label: config?.slashMenuTableLabel ?? 'Table',\n      icon: config?.slashMenuTableIcon?.() ?? tableIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n        let { tr } = state\n        tr = clearRange(tr)\n        const from = tr.selection.from\n        const table = createTable(ctx, 3, 3)\n        tr = tr.replaceSelectionWith(table)\n        dispatch(tr)\n\n        requestAnimationFrame(() => {\n          const docSize = view.state.doc.content.size\n          const $pos = view.state.doc.resolve(\n            from > docSize ? docSize : from < 0 ? 0 : from\n          )\n          const selection = TextSelection.near($pos)\n          const tr = view.state.tr\n          tr.setSelection(selection)\n          dispatch(tr.scrollIntoView())\n        })\n      },\n    })\n  }\n\n  if (isLatexEnabled) {\n    advancedGroup.addItem('math', {\n      label: config?.slashMenuMathLabel ?? 'Math',\n      icon: config?.slashMenuMathIcon?.() ?? functionsIcon,\n      onRun: (ctx) => {\n        const view = ctx.get(editorViewCtx)\n        const { dispatch, state } = view\n\n        const command = clearContentAndAddBlockType(codeBlockSchema.type(ctx), {\n          language: 'LaTex',\n        })\n        command(state, dispatch)\n      },\n    })\n  }\n\n  config?.buildMenu?.(groupBuilder)\n\n  let groups = groupBuilder.build()\n\n  if (filter) {\n    groups = groups\n      .map((group) => {\n        const items = group.items.filter((item) =>\n          item.label.toLowerCase().includes(filter.toLowerCase())\n        )\n\n        return {\n          ...group,\n          items,\n        }\n      })\n      .filter((group) => group.items.length > 0)\n  }\n\n  const items = groups.flatMap((groups) => groups.items)\n  items.forEach((item, index) => {\n    Object.assign(item, { index })\n  })\n\n  groups.reduce((acc, group) => {\n    const end = acc + group.items.length\n    Object.assign(group, {\n      range: [acc, end],\n    })\n    return end\n  }, 0)\n\n  return {\n    groups: groups as MenuItemGroup[],\n    size: items.length,\n  }\n}\n", "import type { Component } from 'atomico'\nimport {\n  c,\n  html,\n  useCallback,\n  useEffect,\n  useHost,\n  useMemo,\n  useRef,\n  useState,\n} from 'atomico'\nimport type { Ctx } from '@milkdown/kit/ctx'\nimport type { BlockEditFeatureConfig } from '../index'\nimport { getGroups } from './config'\n\nexport interface MenuProps {\n  ctx: Ctx\n  show: boolean\n  filter: string\n  hide: () => void\n  config?: BlockEditFeatureConfig\n}\n\nexport const menuComponent: Component<MenuProps> = ({\n  show,\n  hide,\n  ctx,\n  filter,\n  config,\n}) => {\n  const { groups, size } = useMemo(\n    () => getGroups(filter, config, ctx),\n    [filter]\n  )\n\n  const host = useHost()\n  const [hoverIndex, setHoverIndex] = useState(0)\n\n  const root = useMemo(() => host.current.getRootNode() as HTMLElement, [host])\n\n  const prevMousePosition = useRef({ x: -999, y: -999 })\n\n  const onMouseMove = useCallback((e: MouseEvent) => {\n    const prevPos = prevMousePosition.current\n    if (!prevPos) return\n\n    const { x, y } = e\n    prevPos.x = x\n    prevPos.y = y\n  }, [])\n\n  useEffect(() => {\n    if (size === 0 && show) hide?.()\n    else if (hoverIndex >= size) setHoverIndex(0)\n  }, [size, show])\n\n  const onHover = useCallback(\n    (\n      index: number | ((prev: number) => number),\n      after?: (index: number) => void\n    ) => {\n      setHoverIndex((prev) => {\n        const next = typeof index === 'function' ? index(prev) : index\n\n        after?.(next)\n        return next\n      })\n    },\n    []\n  )\n\n  const scrollToIndex = useCallback((index: number) => {\n    const target = host.current.querySelector<HTMLElement>(\n      `[data-index=\"${index}\"]`\n    )\n    const scrollRoot = host.current.querySelector<HTMLElement>('.menu-groups')\n\n    if (!target || !scrollRoot) return\n\n    scrollRoot.scrollTop = target.offsetTop - scrollRoot.offsetTop\n  }, [])\n\n  const runByIndex = useCallback(\n    (index: number) => {\n      const item = groups.flatMap((group) => group.items).at(index)\n      if (item && ctx) item.onRun(ctx)\n\n      hide?.()\n    },\n    [groups]\n  )\n\n  const onKeydown = useCallback(\n    (e: KeyboardEvent) => {\n      if (e.key === 'Escape') {\n        e.preventDefault()\n        hide?.()\n        return\n      }\n\n      if (e.key === 'ArrowDown') {\n        e.preventDefault()\n        return onHover(\n          (index) => (index < size - 1 ? index + 1 : index),\n          scrollToIndex\n        )\n      }\n\n      if (e.key === 'ArrowUp') {\n        e.preventDefault()\n        return onHover(\n          (index) => (index <= 0 ? index : index - 1),\n          scrollToIndex\n        )\n      }\n\n      if (e.key === 'ArrowLeft') {\n        e.preventDefault()\n        return onHover((index) => {\n          const group = groups.find(\n            (group) => group.range[0] <= index && group.range[1] > index\n          )\n          if (!group) return index\n\n          const prevGroup = groups[groups.indexOf(group) - 1]\n          if (!prevGroup) return index\n\n          return prevGroup.range[1] - 1\n        }, scrollToIndex)\n      }\n\n      if (e.key === 'ArrowRight') {\n        e.preventDefault()\n        return onHover((index) => {\n          const group = groups.find(\n            (group) => group.range[0] <= index && group.range[1] > index\n          )\n          if (!group) return index\n\n          const nextGroup = groups[groups.indexOf(group) + 1]\n          if (!nextGroup) return index\n\n          return nextGroup.range[0]\n        }, scrollToIndex)\n      }\n\n      if (e.key === 'Enter') {\n        e.preventDefault()\n        runByIndex(hoverIndex)\n      }\n    },\n    [hide, groups, hoverIndex]\n  )\n\n  const onMouseEnter = useCallback((index: number) => {\n    return (e: MouseEvent) => {\n      const prevPos = prevMousePosition.current\n      if (!prevPos) return\n\n      const { x, y } = e\n      if (x === prevPos.x && y === prevPos.y) return\n\n      onHover(index)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (show) root.addEventListener('keydown', onKeydown, { capture: true })\n    else root.removeEventListener('keydown', onKeydown, { capture: true })\n\n    return () => {\n      root.removeEventListener('keydown', onKeydown, { capture: true })\n    }\n  }, [show, onKeydown])\n\n  return html`\n    <host onmousedown=${(e: MouseEvent) => e.preventDefault()}>\n      <nav class=\"tab-group\">\n        <ul>\n          ${groups.map(\n            (group) =>\n              html`<li\n                key=${group.key}\n                onmousedown=${() => onHover(group.range[0], scrollToIndex)}\n                class=${hoverIndex >= group.range[0] &&\n                hoverIndex < group.range[1]\n                  ? 'selected'\n                  : ''}\n              >\n                ${group.label}\n              </li>`\n          )}\n        </ul>\n      </nav>\n      <div class=\"menu-groups\" onmousemove=${onMouseMove}>\n        ${groups.map((group) => {\n          return html`\n            <div key=${group.key} class=\"menu-group\">\n              <h6>${group.label}</h6>\n              <ul>\n                ${group.items.map(\n                  (item) =>\n                    html`<li\n                      key=${item.key}\n                      data-index=${item.index}\n                      class=${hoverIndex === item.index ? 'hover' : ''}\n                      onmouseenter=${onMouseEnter(item.index)}\n                      onmousedown=${() => {\n                        host.current\n                          .querySelector(`[data-index=\"${item.index}\"]`)\n                          ?.classList.add('active')\n                      }}\n                      onmouseup=${() => {\n                        host.current\n                          .querySelector(`[data-index=\"${item.index}\"]`)\n                          ?.classList.remove('active')\n                        runByIndex(item.index)\n                      }}\n                    >\n                      ${item.icon}\n                      <span>${item.label}</span>\n                    </li>`\n                )}\n              </ul>\n            </div>\n          `\n        })}\n      </div>\n    </host>\n  `\n}\n\nmenuComponent.props = {\n  ctx: Object,\n  config: Object,\n  show: Boolean,\n  filter: String,\n  hide: Function,\n}\n\nexport const MenuElement = c(menuComponent)\n", "import {\n  TextSelection,\n  type PluginView,\n  type Selection,\n} from '@milkdown/kit/prose/state'\nimport type { EditorView } from '@milkdown/kit/prose/view'\nimport { SlashProvider, slashFactory } from '@milkdown/kit/plugin/slash'\nimport type { Ctx } from '@milkdown/kit/ctx'\nimport type { AtomicoThis } from 'atomico/types/dom'\nimport { $ctx } from '@milkdown/kit/utils'\nimport { defIfNotExists, isInCodeBlock, isInList } from '../../../utils'\nimport type { BlockEditFeatureConfig } from '../index'\nimport type { MenuProps } from './component'\nimport { MenuElement } from './component'\n\nexport const menu = slashFactory('CREPE_MENU')\n\nexport interface MenuAPI {\n  show: (pos: number) => void\n  hide: () => void\n}\n\nexport const menuAPI = $ctx(\n  {\n    show: () => {},\n    hide: () => {},\n  } as MenuAPI,\n  'menuAPICtx'\n)\n\ndefIfNotExists('milkdown-slash-menu', MenuElement)\nexport function configureMenu(ctx: Ctx, config?: BlockEditFeatureConfig) {\n  ctx.set(menu.key, {\n    view: (view) => new MenuView(ctx, view, config),\n  })\n}\n\nclass MenuView implements PluginView {\n  readonly #content: AtomicoThis<MenuProps, HTMLElement>\n  readonly #slashProvider: SlashProvider\n  #programmaticallyPos: number | null = null\n\n  constructor(ctx: Ctx, view: EditorView, config?: BlockEditFeatureConfig) {\n    this.#content = new MenuElement()\n    this.#content.hide = this.hide\n    this.#content.ctx = ctx\n    this.#content.config = config\n    // eslint-disable-next-line ts/no-this-alias\n    const self = this\n    this.#slashProvider = new SlashProvider({\n      content: this.#content,\n      debounce: 20,\n      shouldShow(this: SlashProvider, view: EditorView) {\n        if (\n          isInCodeBlock(view.state.selection) ||\n          isInList(view.state.selection)\n        )\n          return false\n\n        const currentText = this.getContent(view, (node) =>\n          ['paragraph', 'heading'].includes(node.type.name)\n        )\n\n        if (currentText == null) return false\n\n        if (!isSelectionAtEndOfNode(view.state.selection)) {\n          return false\n        }\n\n        const pos = self.#programmaticallyPos\n\n        self.#content.filter = currentText.startsWith('/')\n          ? currentText.slice(1)\n          : currentText\n\n        if (typeof pos === 'number') {\n          if (\n            view.state.doc.resolve(pos).node() !==\n            view.state.doc.resolve(view.state.selection.from).node()\n          ) {\n            self.#programmaticallyPos = null\n\n            return false\n          }\n\n          return true\n        }\n\n        if (!currentText.startsWith('/')) return false\n\n        return true\n      },\n      offset: 10,\n    })\n\n    this.#slashProvider.onShow = () => {\n      this.#content.show = true\n    }\n    this.#slashProvider.onHide = () => {\n      this.#content.show = false\n    }\n    this.update(view)\n\n    ctx.set(menuAPI.key, {\n      show: (pos) => this.show(pos),\n      hide: () => this.hide(),\n    })\n  }\n\n  update = (view: EditorView) => {\n    this.#slashProvider.update(view)\n  }\n\n  show = (pos: number) => {\n    this.#programmaticallyPos = pos\n    this.#content.filter = ''\n    this.#slashProvider.show()\n  }\n\n  hide = () => {\n    this.#programmaticallyPos = null\n    this.#slashProvider.hide()\n  }\n\n  destroy = () => {\n    this.#slashProvider.destroy()\n    this.#content.remove()\n  }\n}\n\nfunction isSelectionAtEndOfNode(selection: Selection) {\n  if (!(selection instanceof TextSelection)) return false\n\n  const { $head } = selection\n  const parent = $head.parent\n  const offset = $head.parentOffset\n\n  return offset === parent.content.size\n}\n", "import { type Component, c, html, useEffect, useRef } from 'atomico'\nimport { menuIcon, plusIcon } from '../../../icons'\nimport type { Icon } from '../../shared'\n\nexport interface BlockHandleProps {\n  show: boolean\n  onAdd: () => void\n  addIcon?: Icon\n  handleIcon?: Icon\n}\n\nconst blockHandleComponent: Component<BlockHandleProps> = ({\n  onAdd,\n  addIcon,\n  handleIcon,\n}) => {\n  const ref = useRef<HTMLDivElement>()\n  useEffect(() => {\n    ref.current?.classList.remove('active')\n  })\n  const onMouseDown = (e: MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    ref.current?.classList.add('active')\n  }\n  const onMouseUp = (e: MouseEvent) => {\n    e.preventDefault()\n    e.stopPropagation()\n    onAdd?.()\n    ref.current?.classList.remove('active')\n  }\n  return html`\n    <host>\n      <div\n        ref=${ref}\n        onmousedown=${onMouseDown}\n        onmouseup=${onMouseUp}\n        class=\"operation-item\"\n      >\n        ${addIcon?.() || plusIcon}\n      </div>\n      <div class=\"operation-item\">${handleIcon?.() || menuIcon}</div>\n    </host>\n  `\n}\n\nblockHandleComponent.props = {\n  show: Boolean,\n  onAdd: Function,\n  addIcon: Function,\n  handleIcon: Function,\n}\n\nexport const BlockHandleElement = c(blockHandleComponent)\n", "import type { PluginView } from '@milkdown/kit/prose/state'\nimport { TextSelection } from '@milkdown/kit/prose/state'\nimport { BlockProvider, block, blockConfig } from '@milkdown/kit/plugin/block'\nimport type { Ctx } from '@milkdown/kit/ctx'\nimport type { AtomicoThis } from 'atomico/types/dom'\nimport { editorViewCtx } from '@milkdown/kit/core'\nimport { paragraphSchema } from '@milkdown/kit/preset/commonmark'\nimport { findParent } from '@milkdown/kit/prose'\nimport { menuAPI } from '../menu'\nimport { defIfNotExists } from '../../../utils'\nimport type { BlockEditFeatureConfig } from '../index'\nimport type { BlockHandleProps } from './component'\nimport { BlockHandleElement } from './component'\n\nexport class BlockHandleView implements PluginView {\n  #content: AtomicoThis<BlockHandleProps>\n  #provider: BlockProvider\n  readonly #ctx: Ctx\n\n  constructor(ctx: Ctx, config?: BlockEditFeatureConfig) {\n    this.#ctx = ctx\n    const content = new BlockHandleElement()\n    this.#content = content\n    this.#content.onAdd = this.onAdd\n    this.#content.addIcon = config?.handleAddIcon\n    this.#content.handleIcon = config?.handleDragIcon\n    this.#provider = new BlockProvider({\n      ctx,\n      content,\n      getOffset: () => 16,\n      getPlacement: ({ active, blockDom }) => {\n        if (active.node.type.name === 'heading') return 'left'\n\n        let totalDescendant = 0\n        active.node.descendants((node) => {\n          totalDescendant += node.childCount\n        })\n        const dom = active.el\n        const domRect = dom.getBoundingClientRect()\n        const handleRect = blockDom.getBoundingClientRect()\n        const style = window.getComputedStyle(dom)\n        const paddingTop = Number.parseInt(style.paddingTop, 10) || 0\n        const paddingBottom = Number.parseInt(style.paddingBottom, 10) || 0\n        const height = domRect.height - paddingTop - paddingBottom\n        const handleHeight = handleRect.height\n        return totalDescendant > 2 || handleHeight < height\n          ? 'left-start'\n          : 'left'\n      },\n    })\n    this.update()\n  }\n\n  update = () => {\n    this.#provider.update()\n  }\n\n  destroy = () => {\n    this.#provider.destroy()\n    this.#content.remove()\n  }\n\n  onAdd = () => {\n    const ctx = this.#ctx\n    const view = ctx.get(editorViewCtx)\n    if (!view.hasFocus()) view.focus()\n\n    const { state, dispatch } = view\n    const active = this.#provider.active\n    if (!active) return\n\n    const $pos = active.$pos\n    const pos = $pos.pos + active.node.nodeSize\n    let tr = state.tr.insert(pos, paragraphSchema.type(ctx).create())\n    tr = tr.setSelection(TextSelection.near(tr.doc.resolve(pos)))\n    dispatch(tr.scrollIntoView())\n\n    this.#provider.hide()\n    ctx.get(menuAPI.key).show(tr.selection.from)\n  }\n}\n\ndefIfNotExists('milkdown-block-handle', BlockHandleElement)\nexport function configureBlockHandle(\n  ctx: Ctx,\n  config?: BlockEditFeatureConfig\n) {\n  ctx.set(blockConfig.key, {\n    filterNodes: (pos) => {\n      const filter = findParent((node) =>\n        ['table', 'blockquote', 'math_inline'].includes(node.type.name)\n      )(pos)\n      if (filter) return false\n\n      return true\n    },\n  })\n  ctx.set(block.key, {\n    view: () => new BlockHandleView(ctx, config),\n  })\n}\n", "import { block } from '@milkdown/kit/plugin/block'\nimport type { DefineFeature, Icon } from '../shared'\nimport { configureBlockHandle } from './handle'\nimport { configureMenu, menu, menuAPI } from './menu'\nimport type { GroupBuilder } from './menu/group-builder'\n\ninterface BlockEditConfig {\n  handleAddIcon: Icon\n  handleDragIcon: Icon\n  buildMenu: (builder: GroupBuilder) => void\n\n  slashMenuTextGroupLabel: string\n  slashMenuTextIcon: Icon\n  slashMenuTextLabel: string\n  slashMenuH1Icon: Icon\n  slashMenuH1Label: string\n  slashMenuH2Icon: Icon\n  slashMenuH2Label: string\n  slashMenuH3Icon: Icon\n  slashMenuH3Label: string\n  slashMenuH4Icon: Icon\n  slashMenuH4Label: string\n  slashMenuH5Icon: Icon\n  slashMenuH5Label: string\n  slashMenuH6Icon: Icon\n  slashMenuH6Label: string\n  slashMenuQuoteIcon: Icon\n  slashMenuQuoteLabel: string\n  slashMenuDividerIcon: Icon\n  slashMenuDividerLabel: string\n\n  slashMenuListGroupLabel: string\n  slashMenuBulletListIcon: Icon\n  slashMenuBulletListLabel: string\n  slashMenuOrderedListIcon: Icon\n  slashMenuOrderedListLabel: string\n  slashMenuTaskListIcon: Icon\n  slashMenuTaskListLabel: string\n\n  slashMenuAdvancedGroupLabel: string\n  slashMenuImageIcon: Icon\n  slashMenuImageLabel: string\n  slashMenuCodeBlockIcon: Icon\n  slashMenuCodeBlockLabel: string\n  slashMenuTableIcon: Icon\n  slashMenuTableLabel: string\n  slashMenuMathIcon: Icon\n  slashMenuMathLabel: string\n}\n\nexport type BlockEditFeatureConfig = Partial<BlockEditConfig>\n\nexport const defineFeature: DefineFeature<BlockEditFeatureConfig> = (\n  editor,\n  config\n) => {\n  editor\n    .config((ctx) => configureBlockHandle(ctx, config))\n    .config((ctx) => configureMenu(ctx, config))\n    .use(menuAPI)\n    .use(block)\n    .use(menu)\n}\n"],
  "mappings": "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",
  "names": ["throttle", "_ctx", "__privateAdd", "_initialized", "_middleware", "_floatingUIOptions", "_root", "__privateSet", "__privateGet", "debounce", "__privateMethod", "__privateAdd", "__privateSet", "__privateGet", "group", "ctx", "tr", "items", "groups", "_content", "view", "offset", "_ctx"]
}
