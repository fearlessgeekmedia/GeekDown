{
  "version": 3,
  "sources": ["../../../../node_modules/@milkdown/components/src/__internal__/helper.ts", "../../../../node_modules/@milkdown/components/src/__internal__/meta.ts", "../../../../node_modules/@milkdown/components/src/table-block/config.ts", "../../../../node_modules/@milkdown/components/src/table-block/view/utils.ts", "../../../../node_modules/@milkdown/components/src/table-block/view/drag.ts", "../../../../node_modules/@milkdown/components/src/table-block/view/pointer.ts", "../../../../node_modules/@milkdown/components/src/table-block/view/operation.ts", "../../../../node_modules/@milkdown/components/src/table-block/view/component.ts", "../../../../node_modules/@milkdown/components/src/table-block/view/view.ts", "../../../../node_modules/@milkdown/components/src/table-block/index.ts", "../../../../node_modules/@milkdown/crepe/src/feature/table/index.ts"],
  "sourcesContent": ["export function defIfNotExists(\n  tagName: string,\n  element: CustomElementConstructor\n) {\n  const current = customElements.get(tagName)\n  if (current == null) {\n    customElements.define(tagName, element)\n    return\n  }\n\n  if (current === element) return\n\n  // eslint-disable-next-line no-console\n  console.warn(`Custom element ${tagName} has been defined before.`)\n}\n", "import type { Meta, MilkdownPlugin } from '@milkdown/ctx'\n\nexport function withMeta<T extends MilkdownPlugin>(\n  plugin: T,\n  meta: Partial<Meta> & Pick<Meta, 'displayName'>\n): T {\n  Object.assign(plugin, {\n    meta: {\n      package: '@milkdown/components',\n      ...meta,\n    },\n  })\n\n  return plugin\n}\n", "import { $ctx } from '@milkdown/utils'\nimport type { html } from 'atomico'\nimport { withMeta } from '../__internal__/meta'\n\nexport type RenderType =\n  | 'add_row'\n  | 'add_col'\n  | 'delete_row'\n  | 'delete_col'\n  | 'align_col_left'\n  | 'align_col_center'\n  | 'align_col_right'\n  | 'col_drag_handle'\n  | 'row_drag_handle'\n\nexport interface TableBlockConfig {\n  renderButton: (\n    renderType: RenderType\n  ) => HTMLElement | ReturnType<typeof html> | string\n}\n\nconst defaultTableBlockConfig: TableBlockConfig = {\n  renderButton: (renderType) => {\n    switch (renderType) {\n      case 'add_row':\n        return '+'\n      case 'add_col':\n        return '+'\n      case 'delete_row':\n        return '-'\n      case 'delete_col':\n        return '-'\n      case 'align_col_left':\n        return 'left'\n      case 'align_col_center':\n        return 'center'\n      case 'align_col_right':\n        return 'right'\n      case 'col_drag_handle':\n        return '='\n      case 'row_drag_handle':\n        return '='\n    }\n  },\n}\n\nexport const tableBlockConfig = $ctx(\n  { ...defaultTableBlockConfig },\n  'tableBlockConfigCtx'\n)\n\nwithMeta(tableBlockConfig, {\n  displayName: 'Config<table-block>',\n  group: 'TableBlock',\n})\n", "import type { Node } from '@milkdown/prose/model'\nimport type { EditorView } from '@milkdown/prose/view'\nimport { findParent } from '@milkdown/prose'\nimport type { Ref } from 'atomico'\nimport { editorViewCtx } from '@milkdown/core'\nimport { CellSelection } from '@milkdown/prose/tables'\nimport { findTable } from '@milkdown/preset-gfm'\nimport { computePosition } from '@floating-ui/dom'\nimport type { Ctx } from '@milkdown/ctx'\nimport type { CellIndex, Refs } from './types'\n\nexport function findNodeIndex(parent: Node, child: Node) {\n  for (let i = 0; i < parent.childCount; i++) {\n    if (parent.child(i) === child) return i\n  }\n  return -1\n}\n\nexport function findPointerIndex(\n  event: PointerEvent,\n  view?: EditorView\n): CellIndex | undefined {\n  if (!view) return\n\n  try {\n    const posAtCoords = view.posAtCoords({\n      left: event.clientX,\n      top: event.clientY,\n    })\n    if (!posAtCoords) return\n    const pos = posAtCoords?.inside\n    if (pos == null || pos < 0) return\n\n    const $pos = view.state.doc.resolve(pos)\n    const node = view.state.doc.nodeAt(pos)\n    if (!node) return\n\n    const cellType = ['table_cell', 'table_header']\n    const rowType = ['table_row', 'table_header_row']\n\n    const cell = cellType.includes(node.type.name)\n      ? node\n      : findParent((node) => cellType.includes(node.type.name))($pos)?.node\n    const row = findParent((node) => rowType.includes(node.type.name))(\n      $pos\n    )?.node\n    const table = findParent((node) => node.type.name === 'table')($pos)?.node\n    if (!cell || !row || !table) return\n\n    const columnIndex = findNodeIndex(row, cell)\n    const rowIndex = findNodeIndex(table, row)\n\n    return [rowIndex, columnIndex]\n  } catch {\n    return undefined\n  }\n}\n\nexport function getRelatedDOM(\n  contentWrapperRef: Ref<HTMLDivElement>,\n  [rowIndex, columnIndex]: CellIndex\n) {\n  const content = contentWrapperRef.current\n  if (!content) return\n  const rows = content.querySelectorAll('tr')\n  const row = rows[rowIndex]\n  if (!row) return\n\n  const firstRow = rows[0]\n  if (!firstRow) return\n\n  const headerCol = firstRow.children[columnIndex]\n  if (!headerCol) return\n\n  const col = row.children[columnIndex]\n  if (!col) return\n\n  return {\n    row,\n    col,\n    headerCol,\n  }\n}\n\nexport function recoveryStateBetweenUpdate(refs: Refs, ctx?: Ctx, node?: Node) {\n  if (!ctx) return\n  if (!node) return\n  const { selection } = ctx.get(editorViewCtx).state\n  if (!(selection instanceof CellSelection)) return\n\n  const { $from } = selection\n  const table = findTable($from)\n  if (!table || table.node !== node) return\n\n  if (selection.isColSelection()) {\n    const { $head } = selection\n    const colIndex = $head.index($head.depth - 1)\n    computeColHandlePositionByIndex({\n      refs,\n      index: [0, colIndex],\n      before: (handleDOM) => {\n        handleDOM\n          .querySelector('.button-group')\n          ?.setAttribute('data-show', 'true')\n      },\n    })\n    return\n  }\n  if (selection.isRowSelection()) {\n    const { $head } = selection\n    const rowNode = findParent(\n      (node) =>\n        node.type.name === 'table_row' || node.type.name === 'table_header_row'\n    )($head)\n    if (!rowNode) return\n    const rowIndex = findNodeIndex(table.node, rowNode.node)\n    computeRowHandlePositionByIndex({\n      refs,\n      index: [rowIndex, 0],\n      before: (handleDOM) => {\n        if (rowIndex > 0)\n          handleDOM\n            .querySelector('.button-group')\n            ?.setAttribute('data-show', 'true')\n      },\n    })\n  }\n}\n\ninterface ComputeHandlePositionByIndexProps {\n  refs: Refs\n  index: CellIndex\n  before?: (handleDOM: HTMLDivElement) => void\n  after?: (handleDOM: HTMLDivElement) => void\n}\n\nexport function computeColHandlePositionByIndex({\n  refs,\n  index,\n  before,\n  after,\n}: ComputeHandlePositionByIndexProps) {\n  const { contentWrapperRef, colHandleRef, hoverIndex } = refs\n  const colHandle = colHandleRef.current\n  if (!colHandle) return\n\n  hoverIndex.current = index\n  const dom = getRelatedDOM(contentWrapperRef, index)\n  if (!dom) return\n  const { headerCol: col } = dom\n  colHandle.dataset.show = 'true'\n  if (before) before(colHandle)\n  computePosition(col, colHandle, { placement: 'top' }).then(({ x, y }) => {\n    Object.assign(colHandle.style, {\n      left: `${x}px`,\n      top: `${y}px`,\n    })\n    if (after) after(colHandle)\n  })\n}\n\nexport function computeRowHandlePositionByIndex({\n  refs,\n  index,\n  before,\n  after,\n}: ComputeHandlePositionByIndexProps) {\n  const { contentWrapperRef, rowHandleRef, hoverIndex } = refs\n  const rowHandle = rowHandleRef.current\n  if (!rowHandle) return\n\n  hoverIndex.current = index\n  const dom = getRelatedDOM(contentWrapperRef, index)\n  if (!dom) return\n  const { row } = dom\n  rowHandle.dataset.show = 'true'\n  if (before) before(rowHandle)\n  computePosition(row, rowHandle, { placement: 'left' }).then(({ x, y }) => {\n    Object.assign(rowHandle.style, {\n      left: `${x}px`,\n      top: `${y}px`,\n    })\n    if (after) after(rowHandle)\n  })\n}\n", "import throttle from 'lodash.throttle'\nimport { computePosition, offset } from '@floating-ui/dom'\nimport { useEffect, useHost, useMemo } from 'atomico'\nimport { commandsCtx, editorViewCtx } from '@milkdown/core'\nimport {\n  moveColCommand,\n  moveRowCommand,\n  selectColCommand,\n  selectRowCommand,\n} from '@milkdown/preset-gfm'\nimport type { Ctx } from '@milkdown/ctx'\nimport {\n  computeColHandlePositionByIndex,\n  computeRowHandlePositionByIndex,\n  getRelatedDOM,\n} from './utils'\nimport type { CellIndex, DragContext, Refs } from './types'\n\nfunction prepareDndContext(refs: Refs): DragContext | undefined {\n  const {\n    dragPreviewRef,\n    tableWrapperRef,\n    contentWrapperRef,\n    yLineHandleRef,\n    xLineHandleRef,\n    colHandleRef,\n    rowHandleRef,\n  } = refs\n\n  const preview = dragPreviewRef.current\n  if (!preview) return\n  const wrapper = tableWrapperRef.current\n  if (!wrapper) return\n  const content = contentWrapperRef.current\n  if (!content) return\n  const contentRoot = content.querySelector('tbody')\n  if (!contentRoot) return\n  const previewRoot = preview.querySelector('tbody')\n  if (!previewRoot) return\n  const yHandle = yLineHandleRef.current\n  if (!yHandle) return\n  const xHandle = xLineHandleRef.current\n  if (!xHandle) return\n  const colHandle = colHandleRef.current\n  if (!colHandle) return\n  const rowHandle = rowHandleRef.current\n  if (!rowHandle) return\n\n  const context = {\n    preview,\n    wrapper,\n    content,\n    contentRoot,\n    previewRoot,\n    yHandle,\n    xHandle,\n    colHandle,\n    rowHandle,\n  }\n\n  return context\n}\n\nfunction handleDrag(\n  refs: Refs,\n  event: DragEvent,\n  ctx: Ctx | undefined,\n  fn: (context: DragContext) => void\n) {\n  const view = ctx?.get(editorViewCtx)\n  if (!view?.editable) return\n\n  event.stopPropagation()\n  if (event.dataTransfer) event.dataTransfer.effectAllowed = 'move'\n\n  const context = prepareDndContext(refs)\n\n  if (!context) return\n\n  // This is to avoid a chrome bug:\n  // https://stackoverflow.com/questions/14203734/dragend-dragenter-and-dragleave-firing-off-immediately-when-i-drag\n  requestAnimationFrame(() => {\n    fn(context)\n  })\n}\n\nexport function createDragRowHandler(refs: Refs, ctx?: Ctx) {\n  return (event: DragEvent) => {\n    handleDrag(\n      refs,\n      event,\n      ctx,\n      ({\n        preview,\n        content,\n        previewRoot,\n        yHandle,\n        xHandle,\n        colHandle,\n        rowHandle,\n      }) => {\n        const { hoverIndex, dragInfo } = refs\n        xHandle.dataset.displayType = 'indicator'\n        yHandle.dataset.show = 'false'\n        colHandle.dataset.show = 'false'\n        rowHandle\n          .querySelector('.button-group')\n          ?.setAttribute('data-show', 'false')\n\n        const [rowIndex] = hoverIndex.current!\n\n        dragInfo.current = {\n          startCoords: [event.clientX, event.clientY],\n          startIndex: rowIndex,\n          endIndex: rowIndex,\n          type: 'row',\n        }\n        preview.dataset.direction = 'vertical'\n\n        const rows = content.querySelectorAll('tr')\n        while (previewRoot.firstChild)\n          previewRoot.removeChild(previewRoot.firstChild)\n\n        const row = rows[rowIndex]\n        if (!row) return\n\n        previewRoot.appendChild(row.cloneNode(true))\n        const height = row.getBoundingClientRect().height\n\n        const { width } = content\n          .querySelector('tbody')!\n          .getBoundingClientRect()\n        Object.assign(preview.style, {\n          width: `${width}px`,\n          height: `${height}px`,\n        })\n\n        preview.dataset.show = 'true'\n      }\n    )\n  }\n}\n\nexport function createDragColHandler(refs: Refs, ctx?: Ctx) {\n  return (event: DragEvent) => {\n    handleDrag(\n      refs,\n      event,\n      ctx,\n      ({\n        preview,\n        content,\n        previewRoot,\n        yHandle,\n        xHandle,\n        colHandle,\n        rowHandle,\n      }) => {\n        const { hoverIndex, dragInfo } = refs\n        xHandle.dataset.show = 'false'\n        yHandle.dataset.displayType = 'indicator'\n        rowHandle.dataset.show = 'false'\n        colHandle\n          .querySelector('.button-group')\n          ?.setAttribute('data-show', 'false')\n\n        const [_, colIndex] = hoverIndex.current!\n\n        dragInfo.current = {\n          startCoords: [event.clientX, event.clientY],\n          startIndex: colIndex,\n          endIndex: colIndex,\n          type: 'col',\n        }\n        preview.dataset.direction = 'horizontal'\n\n        const rows = content.querySelectorAll('tr')\n        while (previewRoot.firstChild)\n          previewRoot.removeChild(previewRoot.firstChild)\n\n        let width: number | undefined\n\n        Array.from(rows).forEach((row) => {\n          const col = row.children[colIndex]\n          if (!col) return\n\n          if (width === undefined) width = col.getBoundingClientRect().width\n\n          const tr = col.parentElement!.cloneNode(false)\n          const clone = col.cloneNode(true)\n          tr.appendChild(clone)\n          previewRoot.appendChild(tr)\n        })\n\n        const { height } = content\n          .querySelector('tbody')!\n          .getBoundingClientRect()\n        Object.assign(preview.style, {\n          width: `${width}px`,\n          height: `${height}px`,\n        })\n\n        preview.dataset.show = 'true'\n      }\n    )\n  }\n}\n\nexport function createDragOverHandler(refs: Refs): (e: DragEvent) => void {\n  return throttle((e: DragEvent) => {\n    const context = prepareDndContext(refs)\n    if (!context) return\n    const { preview, content, contentRoot, xHandle, yHandle } = context\n    const { dragInfo, hoverIndex } = refs\n\n    if (preview.dataset.show === 'false') return\n    const dom = getRelatedDOM(refs.contentWrapperRef, hoverIndex.current!)\n    if (!dom) return\n    const firstRow = contentRoot.querySelector('tr')\n    if (!firstRow) return\n    const info = dragInfo.current\n    if (!info) return\n\n    if (!contentRoot.offsetParent) return\n\n    const wrapperOffsetTop = (contentRoot.offsetParent as HTMLElement).offsetTop\n    const wrapperOffsetLeft = (contentRoot.offsetParent as HTMLElement)\n      .offsetLeft\n\n    if (info.type === 'col') {\n      const width = dom.col.getBoundingClientRect().width\n      const { left, width: fullWidth } = contentRoot.getBoundingClientRect()\n      const leftGap = wrapperOffsetLeft - left\n      const previewLeft = e.clientX + leftGap - width / 2\n      const previewRight = e.clientX + leftGap + width / 2\n\n      const [startX] = info.startCoords\n      const direction = startX < e.clientX ? 'right' : 'left'\n\n      preview.style.top = `${wrapperOffsetTop}px`\n      const previewLeftOffset =\n        previewLeft < left + leftGap - 20\n          ? left + leftGap - 20\n          : previewLeft > left + fullWidth + leftGap - width + 20\n            ? left + fullWidth + leftGap - width + 20\n            : previewLeft\n\n      preview.style.left = `${previewLeftOffset}px`\n\n      const children = Array.from(firstRow.children)\n      const col = children.find((col, index) => {\n        const boundary = col.getBoundingClientRect()\n        let boundaryLeft = boundary.left + wrapperOffsetLeft - left\n        let boundaryRight = boundary.right + wrapperOffsetLeft - left\n        if (direction === 'right') {\n          boundaryLeft = boundaryLeft + boundary.width / 2\n          boundaryRight = boundaryRight + boundary.width / 2\n          if (boundaryLeft <= previewRight && boundaryRight >= previewRight)\n            return true\n          if (\n            index === firstRow.children.length - 1 &&\n            previewRight > boundaryRight\n          )\n            return true\n        } else {\n          boundaryLeft = boundaryLeft - boundary.width / 2\n          boundaryRight = boundaryRight - boundary.width / 2\n          if (boundaryLeft <= previewLeft && boundaryRight >= previewLeft)\n            return true\n          if (index === 0 && previewLeft < boundaryLeft) return true\n        }\n\n        return false\n      })\n      if (col) {\n        const yHandleWidth = yHandle.getBoundingClientRect().width\n        const contentBoundary = content.getBoundingClientRect()\n        const index = children.indexOf(col)\n        info.endIndex = index\n\n        computePosition(col, yHandle, {\n          placement: direction === 'left' ? 'left' : 'right',\n          middleware: [offset(direction === 'left' ? -1 * yHandleWidth : 0)],\n        }).then(({ x }) => {\n          yHandle.dataset.show = 'true'\n          Object.assign(yHandle.style, {\n            height: `${contentBoundary.height}px`,\n            left: `${x}px`,\n            top: `${wrapperOffsetTop}px`,\n          })\n        })\n      }\n    } else if (info.type === 'row') {\n      const height = dom.row.getBoundingClientRect().height\n      const { top, height: fullHeight } = contentRoot.getBoundingClientRect()\n\n      const topGap = wrapperOffsetTop - top\n      const previewTop = e.clientY + topGap - height / 2\n      const previewBottom = e.clientY + topGap + height / 2\n\n      const [_, startY] = info.startCoords\n      const direction = startY < e.clientY ? 'down' : 'up'\n\n      const previewTopOffset =\n        previewTop < top + topGap - 20\n          ? top + topGap - 20\n          : previewTop > top + fullHeight + topGap - height + 20\n            ? top + fullHeight + topGap - height + 20\n            : previewTop\n\n      preview.style.top = `${previewTopOffset}px`\n      preview.style.left = `${wrapperOffsetLeft}px`\n\n      const rows = Array.from(contentRoot.querySelectorAll('tr'))\n      const row = rows.find((row, index) => {\n        const boundary = row.getBoundingClientRect()\n        let boundaryTop = boundary.top + wrapperOffsetTop - top\n        let boundaryBottom = boundary.bottom + wrapperOffsetTop - top\n        if (direction === 'down') {\n          boundaryTop = boundaryTop + boundary.height / 2\n          boundaryBottom = boundaryBottom + boundary.height / 2\n          if (boundaryTop <= previewBottom && boundaryBottom >= previewBottom)\n            return true\n          if (index === rows.length - 1 && previewBottom > boundaryBottom)\n            return true\n        } else {\n          boundaryTop = boundaryTop - boundary.height / 2\n          boundaryBottom = boundaryBottom - boundary.height / 2\n          if (boundaryTop <= previewTop && boundaryBottom >= previewTop)\n            return true\n          if (index === 0 && previewTop < boundaryTop) return true\n        }\n        return false\n      })\n      if (row) {\n        const xHandleHeight = xHandle.getBoundingClientRect().height\n        const contentBoundary = content.getBoundingClientRect()\n        const index = rows.indexOf(row)\n        info.endIndex = index\n\n        computePosition(row, xHandle, {\n          placement: direction === 'up' ? 'top' : 'bottom',\n          middleware: [offset(direction === 'up' ? -1 * xHandleHeight : 0)],\n        }).then(({ y }) => {\n          xHandle.dataset.show = 'true'\n          Object.assign(xHandle.style, {\n            width: `${contentBoundary.width}px`,\n            top: `${y}px`,\n          })\n        })\n      }\n    }\n  }, 20)\n}\n\nexport function useDragHandlers(\n  refs: Refs,\n  ctx?: Ctx,\n  getPos?: () => number | undefined\n) {\n  const { dragPreviewRef, yLineHandleRef, xLineHandleRef, dragInfo } = refs\n  const host = useHost()\n  const root = useMemo(() => host.current.getRootNode() as HTMLElement, [host])\n\n  const dragRow = useMemo(() => createDragRowHandler(refs, ctx), [refs])\n  const dragCol = useMemo(() => createDragColHandler(refs, ctx), [refs])\n\n  useEffect(() => {\n    const onDragEnd = () => {\n      const preview = dragPreviewRef.current\n      if (!preview) return\n\n      if (preview.dataset.show === 'false') return\n\n      const previewRoot = preview?.querySelector('tbody')\n\n      while (previewRoot?.firstChild)\n        previewRoot?.removeChild(previewRoot.firstChild)\n\n      if (preview) preview.dataset.show = 'false'\n    }\n\n    const onDrop = () => {\n      const preview = dragPreviewRef.current\n      if (!preview) return\n      const yHandle = yLineHandleRef.current\n      if (!yHandle) return\n      const xHandle = xLineHandleRef.current\n      if (!xHandle) return\n      const info = dragInfo.current\n      if (!info) return\n      if (!ctx) return\n      if (preview.dataset.show === 'false') return\n      const colHandle = refs.colHandleRef.current\n      if (!colHandle) return\n      const rowHandle = refs.rowHandleRef.current\n      if (!rowHandle) return\n\n      yHandle.dataset.show = 'false'\n      xHandle.dataset.show = 'false'\n\n      if (info.startIndex === info.endIndex) return\n\n      const commands = ctx.get(commandsCtx)\n      const payload = {\n        from: info.startIndex,\n        to: info.endIndex,\n        pos: (getPos?.() ?? 0) + 1,\n      }\n      if (info.type === 'col') {\n        commands.call(selectColCommand.key, {\n          pos: payload.pos,\n          index: info.startIndex,\n        })\n        commands.call(moveColCommand.key, payload)\n        const index: CellIndex = [0, info.endIndex]\n        computeColHandlePositionByIndex({\n          refs,\n          index,\n        })\n      } else {\n        commands.call(selectRowCommand.key, {\n          pos: payload.pos,\n          index: info.startIndex,\n        })\n        commands.call(moveRowCommand.key, payload)\n        const index: CellIndex = [info.endIndex, 0]\n        computeRowHandlePositionByIndex({\n          refs,\n          index,\n        })\n      }\n\n      requestAnimationFrame(() => {\n        ctx.get(editorViewCtx).focus()\n      })\n    }\n    const onDragOver = createDragOverHandler(refs)\n\n    root.addEventListener('dragover', onDragOver)\n    root.addEventListener('dragend', onDragEnd)\n    root.addEventListener('drop', onDrop)\n    return () => {\n      root.removeEventListener('dragover', onDragOver)\n      root.removeEventListener('dragend', onDragEnd)\n      root.removeEventListener('drop', onDrop)\n    }\n  }, [])\n\n  return {\n    dragRow,\n    dragCol,\n  }\n}\n", "import { computePosition, offset } from '@floating-ui/dom'\nimport type { EditorView } from '@milkdown/prose/view'\nimport throttle from 'lodash.throttle'\nimport { useMemo } from 'atomico'\nimport type { Refs } from './types'\nimport {\n  computeColHandlePositionByIndex,\n  computeRowHandlePositionByIndex,\n  findPointerIndex,\n  getRelatedDOM,\n} from './utils'\n\nexport function createPointerMoveHandler(\n  refs: Refs,\n  view?: EditorView\n): (e: PointerEvent) => void {\n  return throttle((e: PointerEvent) => {\n    if (!view?.editable) return\n    const {\n      contentWrapperRef,\n      yLineHandleRef,\n      xLineHandleRef,\n      colHandleRef,\n      rowHandleRef,\n      hoverIndex,\n      lineHoverIndex,\n    } = refs\n    const yHandle = yLineHandleRef.current\n    if (!yHandle) return\n    const xHandle = xLineHandleRef.current\n    if (!xHandle) return\n    const content = contentWrapperRef.current\n    if (!content) return\n    const rowHandle = rowHandleRef.current\n    if (!rowHandle) return\n    const colHandle = colHandleRef.current\n    if (!colHandle) return\n\n    const index = findPointerIndex(e, view)\n    if (!index) return\n\n    const dom = getRelatedDOM(contentWrapperRef, index)\n    if (!dom) return\n\n    const [rowIndex, colIndex] = index\n    const boundary = dom.col.getBoundingClientRect()\n    const closeToBoundaryLeft = Math.abs(e.clientX - boundary.left) < 8\n    const closeToBoundaryRight = Math.abs(boundary.right - e.clientX) < 8\n    const closeToBoundaryTop = Math.abs(e.clientY - boundary.top) < 8\n    const closeToBoundaryBottom = Math.abs(boundary.bottom - e.clientY) < 8\n\n    const closeToBoundary =\n      closeToBoundaryLeft ||\n      closeToBoundaryRight ||\n      closeToBoundaryTop ||\n      closeToBoundaryBottom\n\n    const rowButtonGroup = rowHandle.querySelector<HTMLElement>('.button-group')\n    const colButtonGroup = colHandle.querySelector<HTMLElement>('.button-group')\n    if (rowButtonGroup) rowButtonGroup.dataset.show = 'false'\n    if (colButtonGroup) colButtonGroup.dataset.show = 'false'\n\n    if (closeToBoundary) {\n      const contentBoundary = content.getBoundingClientRect()\n      rowHandle.dataset.show = 'false'\n      colHandle.dataset.show = 'false'\n      xHandle.dataset.displayType = 'tool'\n      yHandle.dataset.displayType = 'tool'\n\n      const yHandleWidth = yHandle.getBoundingClientRect().width\n      const xHandleHeight = xHandle.getBoundingClientRect().height\n\n      // display vertical line handle\n      if (closeToBoundaryLeft || closeToBoundaryRight) {\n        lineHoverIndex.current![1] = closeToBoundaryLeft\n          ? colIndex\n          : colIndex + 1\n        computePosition(dom.col, yHandle, {\n          placement: closeToBoundaryLeft ? 'left' : 'right',\n          middleware: [offset(closeToBoundaryLeft ? -1 * yHandleWidth : 0)],\n        }).then(({ x }) => {\n          yHandle.dataset.show = 'true'\n          Object.assign(yHandle.style, {\n            height: `${contentBoundary.height}px`,\n            left: `${x}px`,\n          })\n        })\n      } else {\n        yHandle.dataset.show = 'false'\n      }\n\n      // display horizontal line handle\n      // won't display if the row is the header row\n      if (index[0] !== 0 && (closeToBoundaryTop || closeToBoundaryBottom)) {\n        lineHoverIndex.current![0] = closeToBoundaryTop\n          ? rowIndex\n          : rowIndex + 1\n        computePosition(dom.row, xHandle, {\n          placement: closeToBoundaryTop ? 'top' : 'bottom',\n          middleware: [offset(closeToBoundaryTop ? -1 * xHandleHeight : 0)],\n        }).then(({ y }) => {\n          xHandle.dataset.show = 'true'\n          Object.assign(xHandle.style, {\n            width: `${contentBoundary.width}px`,\n            top: `${y}px`,\n          })\n        })\n      } else {\n        xHandle.dataset.show = 'false'\n      }\n\n      return\n    }\n\n    lineHoverIndex.current = [-1, -1]\n\n    yHandle.dataset.show = 'false'\n    xHandle.dataset.show = 'false'\n    rowHandle.dataset.show = 'true'\n    colHandle.dataset.show = 'true'\n\n    computeRowHandlePositionByIndex({\n      refs,\n      index,\n    })\n    computeColHandlePositionByIndex({\n      refs,\n      index,\n    })\n    hoverIndex.current = index\n  }, 20)\n}\n\nexport function createPointerLeaveHandler(refs: Refs): () => void {\n  return () => {\n    const { rowHandleRef, colHandleRef, yLineHandleRef, xLineHandleRef } = refs\n    setTimeout(() => {\n      const rowHandle = rowHandleRef.current\n      if (!rowHandle) return\n      const colHandle = colHandleRef.current\n      if (!colHandle) return\n      const yHandle = yLineHandleRef.current\n      if (!yHandle) return\n      const xHandle = xLineHandleRef.current\n      if (!xHandle) return\n\n      rowHandle.dataset.show = 'false'\n      colHandle.dataset.show = 'false'\n      yHandle.dataset.show = 'false'\n      xHandle.dataset.show = 'false'\n    }, 200)\n  }\n}\n\nexport function usePointerHandlers(refs: Refs, view?: EditorView) {\n  const pointerMove = useMemo(() => createPointerMoveHandler(refs, view), [])\n  const pointerLeave = useMemo(() => createPointerLeaveHandler(refs), [])\n\n  return {\n    pointerMove,\n    pointerLeave,\n  }\n}\n", "import { useCallback } from 'atomico'\nimport { commandsCtx, editorViewCtx } from '@milkdown/core'\nimport {\n  addColAfterCommand,\n  addColBeforeCommand,\n  addRowAfterCommand,\n  addRowBeforeCommand,\n  deleteSelectedCellsCommand,\n  selectColCommand,\n  selectRowCommand,\n  setAlignCommand,\n} from '@milkdown/preset-gfm'\nimport type { Ctx } from '@milkdown/ctx'\nimport type { Refs } from './types'\n\nexport function useOperation(\n  refs: Refs,\n  ctx?: Ctx,\n  getPos?: () => number | undefined\n) {\n  const {\n    xLineHandleRef,\n    contentWrapperRef,\n    colHandleRef,\n    rowHandleRef,\n    hoverIndex,\n    lineHoverIndex,\n  } = refs\n\n  const onAddRow = useCallback(() => {\n    if (!ctx) return\n    const xHandle = xLineHandleRef.current\n    if (!xHandle) return\n\n    const [rowIndex] = lineHoverIndex.current!\n    if (rowIndex < 0) return\n\n    if (!ctx.get(editorViewCtx).editable) return\n\n    const rows = Array.from(\n      contentWrapperRef.current?.querySelectorAll('tr') ?? []\n    )\n    const commands = ctx.get(commandsCtx)\n    const pos = (getPos?.() ?? 0) + 1\n    if (rows.length === rowIndex) {\n      commands.call(selectRowCommand.key, { pos, index: rowIndex - 1 })\n      commands.call(addRowAfterCommand.key)\n    } else {\n      commands.call(selectRowCommand.key, { pos, index: rowIndex })\n      commands.call(addRowBeforeCommand.key)\n    }\n\n    commands.call(selectRowCommand.key, { pos, index: rowIndex })\n    xHandle.dataset.show = 'false'\n  }, [])\n\n  const onAddCol = useCallback(() => {\n    if (!ctx) return\n    const xHandle = xLineHandleRef.current\n    if (!xHandle) return\n\n    const [_, colIndex] = lineHoverIndex.current!\n    if (colIndex < 0) return\n\n    if (!ctx.get(editorViewCtx).editable) return\n\n    const cols = Array.from(\n      contentWrapperRef.current?.querySelector('tr')?.children ?? []\n    )\n    const commands = ctx.get(commandsCtx)\n\n    const pos = (getPos?.() ?? 0) + 1\n    if (cols.length === colIndex) {\n      commands.call(selectColCommand.key, { pos, index: colIndex - 1 })\n      commands.call(addColAfterCommand.key)\n    } else {\n      commands.call(selectColCommand.key, { pos, index: colIndex })\n      commands.call(addColBeforeCommand.key)\n    }\n\n    commands.call(selectColCommand.key, { pos, index: colIndex })\n  }, [])\n\n  const selectCol = useCallback(() => {\n    if (!ctx) return\n    const [_, colIndex] = hoverIndex.current!\n    const commands = ctx.get(commandsCtx)\n    const pos = (getPos?.() ?? 0) + 1\n    commands.call(selectColCommand.key, { pos, index: colIndex })\n    const buttonGroup =\n      colHandleRef.current?.querySelector<HTMLElement>('.button-group')\n    if (buttonGroup)\n      buttonGroup.dataset.show =\n        buttonGroup.dataset.show === 'true' ? 'false' : 'true'\n  }, [])\n\n  const selectRow = useCallback(() => {\n    if (!ctx) return\n    const [rowIndex, _] = hoverIndex.current!\n    const commands = ctx.get(commandsCtx)\n    const pos = (getPos?.() ?? 0) + 1\n    commands.call(selectRowCommand.key, { pos, index: rowIndex })\n    const buttonGroup =\n      rowHandleRef.current?.querySelector<HTMLElement>('.button-group')\n    if (buttonGroup && rowIndex > 0)\n      buttonGroup.dataset.show =\n        buttonGroup.dataset.show === 'true' ? 'false' : 'true'\n  }, [])\n\n  const deleteSelected = useCallback((e: PointerEvent) => {\n    if (!ctx) return\n\n    if (!ctx.get(editorViewCtx).editable) return\n\n    e.preventDefault()\n    e.stopPropagation()\n    const commands = ctx.get(commandsCtx)\n    commands.call(deleteSelectedCellsCommand.key)\n    requestAnimationFrame(() => {\n      ctx.get(editorViewCtx).focus()\n    })\n  }, [])\n\n  const onAlign = useCallback(\n    (direction: 'left' | 'center' | 'right') => (e: PointerEvent) => {\n      if (!ctx) return\n\n      if (!ctx.get(editorViewCtx).editable) return\n\n      e.preventDefault()\n      e.stopPropagation()\n      const commands = ctx.get(commandsCtx)\n      commands.call(setAlignCommand.key, direction)\n      requestAnimationFrame(() => {\n        ctx.get(editorViewCtx).focus()\n      })\n    },\n    []\n  )\n\n  return {\n    onAddRow,\n    onAddCol,\n    selectCol,\n    selectRow,\n    deleteSelected,\n    onAlign,\n  }\n}\n", "import type { Component } from 'atomico'\nimport { c, html, useHost, useLayoutEffect, useMemo, useRef } from 'atomico'\nimport type { Node } from '@milkdown/prose/model'\nimport type { EditorView } from '@milkdown/prose/view'\nimport type { Ctx } from '@milkdown/ctx'\n\nimport clsx from 'clsx'\nimport type { TableBlockConfig } from '../config'\nimport { useDragHandlers } from './drag'\nimport type { CellIndex, DragInfo, Refs } from './types'\nimport { recoveryStateBetweenUpdate } from './utils'\nimport { usePointerHandlers } from './pointer'\nimport { useOperation } from './operation'\n\nexport interface TableComponentProps {\n  view: EditorView\n  ctx: Ctx\n  getPos: () => number | undefined\n  node: Node\n  config: TableBlockConfig\n}\n\nexport const tableComponent: Component<TableComponentProps> = ({\n  view,\n  ctx,\n  getPos,\n  node,\n  config,\n}) => {\n  const host = useHost()\n  const contentWrapperRef = useRef<HTMLDivElement>()\n  const colHandleRef = useRef<HTMLDivElement>()\n  const rowHandleRef = useRef<HTMLDivElement>()\n  const xLineHandleRef = useRef<HTMLDivElement>()\n  const yLineHandleRef = useRef<HTMLDivElement>()\n  const tableWrapperRef = useRef<HTMLDivElement>()\n  const dragPreviewRef = useRef<HTMLDivElement>()\n  const hoverIndex = useRef<CellIndex>([0, 0])\n  const lineHoverIndex = useRef<CellIndex>([-1, -1])\n  const dragInfo = useRef<DragInfo>()\n  const refs: Refs = useMemo(() => {\n    return {\n      dragPreviewRef,\n      tableWrapperRef,\n      contentWrapperRef,\n      yLineHandleRef,\n      xLineHandleRef,\n      colHandleRef,\n      rowHandleRef,\n      hoverIndex,\n      lineHoverIndex,\n      dragInfo,\n    }\n  }, [])\n\n  useLayoutEffect(() => {\n    const current = contentWrapperRef.current\n    if (!current) return\n\n    const contentDOM = host.current.querySelector('[data-content-dom]')\n\n    if (contentDOM) current.appendChild(contentDOM)\n\n    if (view?.editable) recoveryStateBetweenUpdate(refs, ctx, node)\n  }, [])\n\n  const { pointerLeave, pointerMove } = usePointerHandlers(refs, view)\n  const { dragRow, dragCol } = useDragHandlers(refs, ctx, getPos)\n  const { onAddRow, onAddCol, selectCol, selectRow, deleteSelected, onAlign } =\n    useOperation(refs, ctx, getPos)\n\n  return html`\n    <host\n      class=${clsx(!view?.editable && 'readonly')}\n      ondragstart=${(e: DragEvent) => e.preventDefault()}\n      ondragover=${(e: DragEvent) => e.preventDefault()}\n      ondragleave=${(e: DragEvent) => e.preventDefault()}\n      onpointermove=${pointerMove}\n      onpointerleave=${pointerLeave}\n    >\n      <button\n        type=\"button\"\n        data-show=\"false\"\n        contenteditable=\"false\"\n        draggable=\"true\"\n        data-role=\"col-drag-handle\"\n        class=\"handle cell-handle\"\n        ondragstart=${dragCol}\n        onclick=${selectCol}\n        onpointerdown=${(e: PointerEvent) => e.stopPropagation()}\n        onpointermove=${(e: PointerEvent) => e.stopPropagation()}\n        ref=${colHandleRef}\n      >\n        ${config?.renderButton('col_drag_handle')}\n        <div\n          data-show=\"false\"\n          class=\"button-group\"\n          onpointermove=${(e: PointerEvent) => e.stopPropagation}\n        >\n          <button type=\"button\" onpointerdown=${onAlign('left')}>\n            ${config?.renderButton('align_col_left')}\n          </button>\n          <button type=\"button\" onpointerdown=${onAlign('center')}>\n            ${config?.renderButton('align_col_center')}\n          </button>\n          <button type=\"button\" onpointerdown=${onAlign('right')}>\n            ${config?.renderButton('align_col_right')}\n          </button>\n          <button type=\"button\" onpointerdown=${deleteSelected}>\n            ${config?.renderButton('delete_col')}\n          </button>\n        </div>\n      </button>\n      <button\n        type=\"button\"\n        data-show=\"false\"\n        contenteditable=\"false\"\n        draggable=\"true\"\n        data-role=\"row-drag-handle\"\n        class=\"handle cell-handle\"\n        ondragstart=${dragRow}\n        onclick=${selectRow}\n        onpointerdown=${(e: PointerEvent) => e.stopPropagation()}\n        onpointermove=${(e: PointerEvent) => e.stopPropagation()}\n        ref=${rowHandleRef}\n      >\n        ${config?.renderButton('row_drag_handle')}\n        <div\n          data-show=\"false\"\n          class=\"button-group\"\n          onpointermove=${(e: PointerEvent) => e.stopPropagation}\n        >\n          <button type=\"button\" onpointerdown=${deleteSelected}>\n            ${config?.renderButton('delete_row')}\n          </button>\n        </div>\n      </button>\n      <div class=\"table-wrapper\" ref=${tableWrapperRef}>\n        <div\n          data-show=\"false\"\n          class=\"drag-preview\"\n          data-direction=\"vertical\"\n          ref=${dragPreviewRef}\n        >\n          <table>\n            <tbody></tbody>\n          </table>\n        </div>\n        <div\n          data-show=\"false\"\n          contenteditable=\"false\"\n          data-display-type=\"tool\"\n          data-role=\"x-line-drag-handle\"\n          class=\"handle line-handle\"\n          onpointermove=${(e: PointerEvent) => e.stopPropagation}\n          ref=${xLineHandleRef}\n        >\n          <button type=\"button\" onclick=${onAddRow} class=\"add-button\">\n            ${config?.renderButton('add_row')}\n          </button>\n        </div>\n        <div\n          data-show=\"false\"\n          contenteditable=\"false\"\n          data-display-type=\"tool\"\n          data-role=\"y-line-drag-handle\"\n          class=\"handle line-handle\"\n          onpointermove=${(e: PointerEvent) => e.stopPropagation}\n          ref=${yLineHandleRef}\n        >\n          <button type=\"button\" onclick=${onAddCol} class=\"add-button\">\n            ${config?.renderButton('add_col')}\n          </button>\n        </div>\n        <table ref=${contentWrapperRef} class=\"children\"></table>\n      </div>\n    </host>\n  `\n}\n\ntableComponent.props = {\n  getPos: Function,\n  view: Object,\n  ctx: Object,\n  node: Object,\n  config: Object,\n}\n\nexport const TableElement = c(tableComponent)\n", "import { $view } from '@milkdown/utils'\nimport { tableSchema } from '@milkdown/preset-gfm'\nimport type { Node } from '@milkdown/prose/model'\nimport type {\n  EditorView,\n  NodeView,\n  NodeViewConstructor,\n  ViewMutationRecord,\n} from '@milkdown/prose/view'\nimport type { Ctx } from '@milkdown/ctx'\nimport { NodeSelection, TextSelection } from '@milkdown/prose/state'\nimport { findParent } from '@milkdown/prose'\nimport { CellSelection } from '@milkdown/prose/tables'\nimport { defIfNotExists } from '../../__internal__/helper'\nimport { tableBlockConfig } from '../config'\nimport { withMeta } from '../../__internal__/meta'\nimport type { TableComponentProps } from './component'\nimport { TableElement } from './component'\n\nexport class TableNodeView implements NodeView {\n  dom: HTMLElement & TableComponentProps\n  contentDOM: HTMLElement\n  constructor(\n    public ctx: Ctx,\n    public node: Node,\n    public view: EditorView,\n    public getPos: () => number | undefined\n  ) {\n    const dom = document.createElement('milkdown-table-block') as HTMLElement &\n      TableComponentProps\n    this.dom = dom\n    dom.view = view\n    dom.ctx = ctx\n    dom.getPos = getPos\n    dom.node = node\n    dom.config = ctx.get(tableBlockConfig.key)\n\n    const contentDOM = document.createElement('tbody')\n    this.contentDOM = contentDOM\n    contentDOM.setAttribute('data-content-dom', 'true')\n    contentDOM.classList.add('content-dom')\n\n    dom.appendChild(contentDOM)\n  }\n\n  update(node: Node) {\n    if (node.type !== this.node.type) return false\n\n    if (node.sameMarkup(this.node) && node.content.eq(this.node.content))\n      return false\n\n    this.node = node\n    this.dom.node = node\n\n    return true\n  }\n\n  #handleClick(event: PointerEvent) {\n    const view = this.view\n    if (!view.editable) return false\n\n    const { state, dispatch } = view\n    const pos = view.posAtCoords({ left: event.clientX, top: event.clientY })\n\n    if (!pos) return false\n\n    const $pos = state.doc.resolve(pos.inside)\n    const node = findParent(\n      (node) =>\n        node.type.name === 'table_cell' || node.type.name === 'table_header'\n    )($pos)\n\n    if (!node) return false\n\n    // if the selection is a text selection, and the current node is the same as the node, return false\n    if (state.selection instanceof TextSelection) {\n      const currentNode = findParent(\n        (node) =>\n          node.type.name === 'table_cell' || node.type.name === 'table_header'\n      )(state.selection.$from)\n      if (currentNode?.node === node.node) return false\n    }\n\n    const { from } = node\n\n    const selection = NodeSelection.create(state.doc, from + 1)\n    if (state.selection.eq(selection)) return false\n\n    if (state.selection instanceof CellSelection) {\n      setTimeout(() => {\n        dispatch(state.tr.setSelection(selection).scrollIntoView())\n      }, 20)\n    } else {\n      requestAnimationFrame(() => {\n        dispatch(state.tr.setSelection(selection).scrollIntoView())\n      })\n    }\n    return true\n  }\n\n  stopEvent(e: Event) {\n    if (e.type === 'drop' || e.type.startsWith('drag')) return true\n\n    if (e.type === 'mousedown') {\n      if (e.target instanceof HTMLButtonElement) return true\n\n      const target = e.target\n      if (\n        target instanceof HTMLElement &&\n        (target.closest('th') || target.closest('td'))\n      ) {\n        const event = e as PointerEvent\n        return this.#handleClick(event)\n      }\n    }\n\n    return false\n  }\n\n  ignoreMutation(mutation: ViewMutationRecord) {\n    if (!this.dom || !this.contentDOM) return true\n\n    if ((mutation.type as unknown) === 'selection') return false\n\n    if (this.contentDOM === mutation.target && mutation.type === 'attributes')\n      return true\n\n    if (this.contentDOM.contains(mutation.target)) return false\n\n    return true\n  }\n}\n\ndefIfNotExists('milkdown-table-block', TableElement)\nexport const tableBlockView = $view(\n  tableSchema.node,\n  (ctx): NodeViewConstructor => {\n    return (initialNode, view, getPos) => {\n      return new TableNodeView(ctx, initialNode, view, getPos)\n    }\n  }\n)\n\nwithMeta(tableBlockView, {\n  displayName: 'NodeView<table-block>',\n  group: 'TableBlock',\n})\n", "import type { MilkdownPlugin } from '@milkdown/ctx'\nimport { tableBlockView } from './view'\nimport { tableBlockConfig } from './config'\n\nexport * from './view'\nexport * from './config'\n\nexport const tableBlock: MilkdownPlugin[] = [tableBlockConfig, tableBlockView]\n", "import {\n  tableBlock,\n  tableBlockConfig,\n} from '@milkdown/kit/component/table-block'\nimport type { DefineFeature, Icon } from '../shared'\nimport {\n  alignCenterIcon,\n  alignLeftIcon,\n  alignRightIcon,\n  dragHandleIcon,\n  plusIcon,\n  removeIcon,\n} from '../../icons'\n\ninterface TableConfig {\n  addRowIcon: Icon\n  addColIcon: Icon\n  deleteRowIcon: Icon\n  deleteColIcon: Icon\n  alignLeftIcon: Icon\n  alignCenterIcon: Icon\n  alignRightIcon: Icon\n  colDragHandleIcon: Icon\n  rowDragHandleIcon: Icon\n}\n\nexport type TableFeatureConfig = Partial<TableConfig>\n\nexport const defineFeature: DefineFeature<TableFeatureConfig> = (\n  editor,\n  config\n) => {\n  editor\n    .config((ctx) => {\n      ctx.update(tableBlockConfig.key, (defaultConfig) => ({\n        ...defaultConfig,\n        renderButton: (renderType) => {\n          switch (renderType) {\n            case 'add_row':\n              return config?.addRowIcon?.() ?? plusIcon\n            case 'add_col':\n              return config?.addColIcon?.() ?? plusIcon\n            case 'delete_row':\n              return config?.deleteRowIcon?.() ?? removeIcon\n            case 'delete_col':\n              return config?.deleteColIcon?.() ?? removeIcon\n            case 'align_col_left':\n              return config?.alignLeftIcon?.() ?? alignLeftIcon\n            case 'align_col_center':\n              return config?.alignCenterIcon?.() ?? alignCenterIcon\n            case 'align_col_right':\n              return config?.alignRightIcon?.() ?? alignRightIcon\n            case 'col_drag_handle':\n              return config?.colDragHandleIcon?.() ?? dragHandleIcon\n            case 'row_drag_handle':\n              return config?.rowDragHandleIcon?.() ?? dragHandleIcon\n          }\n        },\n      }))\n    })\n    .use(tableBlock)\n}\n"],
  "mappings": "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",
  "names": ["__spreadValues", "node", "throttle", "col", "row"]
}
